{"version":3,"sources":["AxisBottom.js","AxisLeft.js","Marks.js","useChartDimensions.js","LineChart.js","SelectLocation.js","App.js","useData.js","index.js"],"names":["AxisBottom","xScale","boundedHeight","boundedWidth","label","labelOffset","tickSize","tickOffset","range","useMemo","className","d","join","fill","ticks","map","tickValue","i","key","transform","y1","y2","style","textAnchor","dy","y","moment","format","x","AxisLeft","yScale","x2","Dot","transition","ref","useRef","useSpring","config","duration","r","cx","cy","circle","Marks","data","xValue","yValue","path","useEffect","select","current","attr","line","combineChartDimensions","dimensions","parsedDimensions","marginTop","marginRight","marginBottom","marginLeft","Math","max","height","width","LineChart","title","selection","xAxis","yAxis","xValues","yValues","transitions","passedSettings","useState","setWidth","setHeight","element","resizeObserver","ResizeObserver","entries","Array","isArray","length","entry","contentRect","observe","unobserve","newSettings","useChartDimensions","dms","selectedData","domain","extent","scaleTime","nice","scaleLinear","dx","lines","SelectLocation","locations","setSelection","value","onChange","e","target","chartConfig","date","total_cases","App","url","setData","csv","Date","location","new_cases","new_deaths","total_deaths","then","sourceData","nest","sortKeys","ascending","sortValues","a","b","useData","Container","keys","Row","Col","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7bb37cf3.chunk.js","sourcesContent":["import React, { useMemo } from 'react';\nimport moment from 'moment';\nimport './Axis.css';\n\nexport const AxisBottom = ({\n  xScale,\n  boundedHeight,\n  boundedWidth,\n  label,\n  labelOffset,\n  tickSize,\n  tickOffset,\n}) => {\n  const range = useMemo(() => xScale.range(), [xScale]);\n\n  return (\n    <>\n      <path\n        className=\"line\"\n        d={['M', range[0], boundedHeight, 'H', range[1]].join(' ')}\n        // in case of not nice() scale\n        // d={['M', range[0], boundedHeight+6, 'v', -6, 'H', range[1], 'v', 6].join(' ')}\n        fill=\"none\"\n      />\n      {xScale.ticks().map((tickValue, i) => (\n        <g\n          className=\"tick\"\n          key={i}\n          transform={`translate(${xScale(tickValue)},0)`}\n        >\n          <line y1={boundedHeight} y2={boundedHeight + tickSize} />\n          {/* <line y1={boundedHeight - tickSize} y2={boundedHeight} /> */}\n          <text\n            style={{ textAnchor: 'middle' }}\n            dy=\".71em\"\n            y={boundedHeight + tickOffset}\n          >\n            {moment(tickValue).format('Do MMM')}\n          </text>\n        </g>\n      ))}\n      {label && (\n        <text\n          className=\"label\"\n          x={boundedWidth / 2}\n          y={boundedHeight + labelOffset}\n          textAnchor=\"middle\"\n        >\n          {label}\n        </text>\n      )}\n    </>\n  );\n};\n","import React, { useMemo } from 'react';\nimport './Axis.css';\n\nexport const AxisLeft = ({\n  yScale,\n  boundedHeight,\n  boundedWidth,\n  label,\n  labelOffset,\n  tickSize,\n  tickOffset,\n}) => {\n  const range = useMemo(() => yScale.range(), [yScale]);\n\n  return (\n    <>\n      <path\n        className=\"line\"\n        d={['M', 0, range[1], 'v', range[0]].join(' ')}\n        fill=\"none\"\n      />\n      {yScale.ticks().map((tickValue, i) => (\n        <g\n          key={i}\n          className=\"tick\"\n          transform={`translate(0,${yScale(tickValue)})`}\n        >\n          <line x2={-tickSize} />\n          <text\n            key={tickValue}\n            style={{ textAnchor: 'end' }}\n            x={-tickOffset}\n            dy=\".32em\"\n          >\n            {tickValue}\n          </text>\n        </g>\n      ))}\n      {label && (\n        <text\n          className=\"label\"\n          textAnchor=\"middle\"\n          transform={`translate(${-labelOffset},${boundedHeight /\n            2}) rotate(-90)`}\n        >\n          {label}\n        </text>\n      )}\n    </>\n  );\n};\n","import React, { useEffect, useRef } from 'react';\nimport { select, line } from 'd3';\nimport { useSpring, animated } from 'react-spring';\nimport './Marks.css';\n\nconst Dot = ({ x, y, transition }) => {\n  const ref = useRef();\n\n  const style = useSpring({\n    config: { duration: transition },\n    r: 6,\n    cx: x,\n    cy: y\n  });\n\n  return <animated.circle {...style} ref={ref} />;\n};\n\nexport const Marks = ({ data, xScale, yScale, xValue, yValue, transition }) => {\n  const path = useRef(null);\n  useEffect(() => {\n    select(path.current)\n      .transition()\n      .duration(1000)\n      .attr('d', () =>\n        line()\n          .x(d => xScale(xValue(d)))\n          .y(d => yScale(yValue(d)))\n          (data)\n      );\n  }, [data, xScale, yScale, xValue, yValue]);\n  return (\n    <g className=\"marks\">\n      <path ref={path} />\n      {data.map((d, i) => (\n        <Dot\n          key={i}\n          x={xScale(xValue(d))}\n          y={yScale(yValue(d))}\n          transition={transition}\n        />\n      ))}\n    </g>\n  );\n};\n","// from: https://wattenberger.com/blog/react-and-d3\n// npm i @juggle/resize-observer\nimport { ResizeObserver } from '@juggle/resize-observer';\nimport { useRef, useEffect, useState } from 'react';\n\n// possible chart settings:\n// const dimensions = {\n//   \"width\": 363,\n//   \"height\": 181,\n//   \"marginTop\": 56,\n//   \"marginRight\": 47,\n//   \"marginBottom\": 81,\n//   \"marginLeft\": 68\n// }\n\nconst combineChartDimensions = dimensions => {\n  const parsedDimensions = {\n      ...dimensions,\n      marginTop: dimensions.marginTop || 10,\n      marginRight: dimensions.marginRight || 10,\n      marginBottom: dimensions.marginBottom || 40,\n      marginLeft: dimensions.marginLeft || 75,\n  }\n\n  return {\n      ...parsedDimensions,\n      boundedHeight: Math.max(\n        parsedDimensions.height\n        - parsedDimensions.marginTop\n        - parsedDimensions.marginBottom,\n        0,\n      ),\n      boundedWidth: Math.max(\n        parsedDimensions.width\n        - parsedDimensions.marginLeft\n        - parsedDimensions.marginRight,\n        0,\n      ),\n  }\n}\n\nexport const useChartDimensions = passedSettings => {\n  const ref = useRef();\n  const dimensions = combineChartDimensions(passedSettings);\n  const [width, setWidth] = useState(0);\n  const [height, setHeight] = useState(0);\n\n  useEffect(() => {\n    if (dimensions.width && dimensions.height) return [ref, dimensions];\n    const element = ref.current;\n    const resizeObserver = new ResizeObserver(entries => {\n      if (!Array.isArray(entries)) return;\n      if (!entries.length) return;\n      const entry = entries[0];\n      if (width !== entry.contentRect.width) setWidth(entry.contentRect.width);\n      if (height !== entry.contentRect.height)\n        setHeight(entry.contentRect.height);\n    });\n    resizeObserver.observe(element);\n    return () => resizeObserver.unobserve(element);\n  }, []);\n\n  const newSettings = combineChartDimensions({\n    ...dimensions,\n    width: dimensions.width || width,\n    height: dimensions.height || height,\n  });\n\n  return [ref, newSettings];\n};\n","import React, { useMemo } from 'react';\nimport { AxisBottom } from './AxisBottom';\nimport { AxisLeft } from './AxisLeft';\nimport { Marks } from './Marks';\nimport { useChartDimensions } from './useChartDimensions';\nimport { scaleTime, extent, scaleLinear } from 'd3';\nimport './LineChart.css';\n\nexport const LineChart = ({\n  title,\n  data,\n  selection,\n  dimensions,\n  xAxis,\n  yAxis,\n  xValues,\n  yValues,\n  transitions,\n}) => {\n  const [ref, dms] = useChartDimensions(dimensions);\n  const {\n    width,\n    height,\n    marginLeft,\n    marginTop,\n    marginBottom,\n    marginRight,\n    boundedHeight,\n    boundedWidth,\n  } = dms;\n\n  const selectedData = useMemo(() => {\n    if (data) return data[`$${selection}`];\n  }, [data, selection]);\n\n  const xScale = useMemo(() => {\n    if (!selectedData) return;\n    const domain = extent(selectedData.map(xValues));\n    return scaleTime()\n      .domain(domain)\n      .range([0, boundedWidth])\n      .nice();\n  }, [selectedData, boundedWidth]);\n\n  const yScale = useMemo(() => {\n    if (!selectedData) return;\n    const domain = extent(selectedData.map(yValues));\n    return scaleLinear()\n      .domain(domain)\n      .range([boundedHeight, 0])\n      .nice();\n  }, [selectedData, boundedHeight]);\n\n  return (\n    <div className='chart-container' ref={ref}>\n      <svg width={width} height={height}>\n        <g transform={`translate(${marginLeft},${marginTop})`}>\n          {title && (\n            <text\n              className=\"title\"\n              x={boundedWidth / 2 + title.dx}\n              y={title.dy}\n              textAnchor=\"middle\"\n            >\n              {title.label}\n            </text>\n          )}\n          {selectedData ? (\n            <>\n              <AxisBottom\n                xScale={xScale}\n                boundedHeight={boundedHeight}\n                boundedWidth={boundedWidth}\n                {...xAxis}\n              />\n              <AxisLeft\n                yScale={yScale}\n                boundedHeight={boundedHeight}\n                boundedWidth={boundedWidth}\n                {...yAxis}\n              />\n              <Marks\n                data={selectedData}\n                xScale={xScale}\n                yScale={yScale}\n                xValue={xValues}\n                yValue={yValues}\n                transition={transitions.lines}\n              />\n            </>\n          ) : (\n            <text>Loading...</text>\n          )}\n        </g>\n      </svg>\n    </div>\n  );\n};\n","import React from 'react';\nimport './SelectLocation.css';\n\nexport const SelectLocation = ({ locations, selection, setSelection }) => {\n  return (\n    <>\n      <label className=\"selection-label mb-0 ml-2\">Select location</label>\n      <select\n        value={selection}\n        className=\"custom-select\"\n        onChange={e => setSelection(e.target.value)}\n      >\n        {locations.map((d, i) => (\n          <option key={i} value={d}>\n            {d}\n          </option>\n        ))}\n      </select>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport { useData } from './useData';\nimport { LineChart } from './LineChart';\nimport { SelectLocation } from './SelectLocation';\n\nconst SOURCE = 'https://covid.ourworldindata.org/data/full_data.csv';\nconst chartConfig = {\n  title: {\n    label: 'Testing',\n    dx: 0,\n    dy: -20,\n  },\n  dimensions: {\n    marginTop: 40,\n    marginRight: 35,\n    marginBottom: 30,\n    marginLeft: 75,\n  },\n  xAxis: {\n    tickSize: 6,\n    tickOffset: 15,\n  },\n  yAxis: {\n    label: 'Cases',\n    labelOffset: 50,\n    tickSize: 6,\n    tickOffset: 10,\n  },\n  xValues: d => d.date,\n  yValues: d => d.total_cases,\n  transitions: {\n    lines: 1000,\n  },\n};\n\nfunction App() {\n  const data = useData({ url: SOURCE });\n  const [selection, setSelection] = useState('Peru');\n\n  return (\n    <Container>\n      <header>\n        <h1 className=\"mt-4 mb-4\">Covid 2019</h1>\n      </header>\n\n      <SelectLocation\n        locations={data ? data.keys() : [selection]}\n        selection={selection}\n        setSelection={setSelection}\n      />\n      <LineChart data={data} selection={selection} {...chartConfig} />\n\n      <footer>\n        <Row>\n          <Col className=\"mt-4 text-right\">\n            <a href=\"https://github.com/renato145/covid2019\" target=\"_black\">\n              Source code\n            </a>\n          </Col>\n        </Row>\n      </footer>\n    </Container>\n  );\n}\n\nexport default App;\n","import { csv, nest, ascending } from 'd3';\nimport { useState, useEffect } from 'react';\n\nexport const useData = ({ url }) => {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    csv(url, d => ({\n      date: new Date(d.date),\n      location: d.location,\n      new_cases: +d.new_cases,\n      new_deaths: +d.new_deaths,\n      total_cases: +d.total_cases,\n      total_deaths: +d.total_deaths,\n    })).then(sourceData => {\n      setData(\n        nest()\n          .key(d => d.location)\n          .sortKeys(ascending)\n          .sortValues((a, b) => a.date - b.date)\n          .map(sourceData)\n      );\n    });\n  }, [url]);\n\n  return data;\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}