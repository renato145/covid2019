{"version":3,"sources":["useData.js","AxisBottom.js","AxisLeft.js","Marks.js","useChartDimensions.js","SelectLocation.js","ChartToolTip.js","LineChart.js","App.js","index.js"],"names":["URLS","ID_COLS","useData","useState","data","setData","useEffect","Promise","all","map","d","csv","then","sourceData","i","nest","key","name","newData","forEach","row","Object","keys","filter","col","includes","newRow","push","meltData","locations","combinedData","loc","allData","dd","values","val","Date","formatedData","sortValues","a","b","date","AxisBottom","xScale","boundedHeight","boundedWidth","label","labelOffset","tickSize","tickOffset","tickWidth","range","useMemo","tickCount","className","join","fill","ticks","tickValue","transform","y1","y2","style","textAnchor","dy","y","moment","format","x","formatNumbers","AxisLeft","yScale","tickHeight","logFormat","tickFormat","x2","Dot","transition","onPointerEnter","onPointerLeave","useSpring","config","duration","easing","easeCubic","cx","cy","setStyle","circle","Marks","xValue","yValue","color","getToolTipText","setToolTipData","path","useRef","select","current","attrTween","prev","this","attr","line","interpolatePath","ref","stroke","text","combineChartDimensions","dimensions","parsedDimensions","marginTop","marginRight","marginBottom","marginLeft","Math","max","height","width","LocationTag","tag","onDelete","Chip","e","backgroundColor","SelectLocation","colors","colorScheme","onChange","Autocomplete","multiple","options","sort","ascending","value","renderInput","params","TextField","variant","renderTags","length","ChartToolTip","opacity","LineChart","title","xAxis","yAxis","xValues","yValues","transitions","defaultLocations","onClose","passedSettings","setWidth","setHeight","element","resizeObserver","ResizeObserver","entries","Array","isArray","entry","contentRect","observe","unobserve","newSettings","useChartDimensions","dms","selection","setSelection","setColors","toolTipData","selectedData","domain","extent","flat","scaleTime","nice","scaleLog","currentKeys","newColors","currentColors","assign","idx","marks","location","schemeTableau10","lines","Row","Col","md","indexOf","newSelection","slice","splice","Button","size","onClick","dx","numberFormat","chartConfig","Confirmed","App","charts","setCharts","Container","href","target","xl","out","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2663f577.chunk.js","sourcesContent":["import { csv, nest } from 'd3';\nimport { useState, useEffect } from 'react';\n\nconst URLS = [\n  [\n    'Confirmed',\n    'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv',\n  ],\n  [\n    'Deaths',\n    'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Deaths.csv',\n  ],\n  [\n    'Recovered',\n    'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Recovered.csv',\n  ],\n];\nconst ID_COLS = ['Province/State', 'Country/Region', 'Lat', 'Long'];\n\nconst meltData = (data, name) => {\n  let newData = [];\n  data.forEach(row => {\n    Object.keys(row)\n      .filter(col => !ID_COLS.includes(col))\n      .forEach(col => {\n        if (row[col] === \"\") return;\n        let newRow = {};\n        ID_COLS.forEach(d => newRow[d] = row[d]);\n        newRow['date'] = col;\n        newRow[name] = +row[col];\n        newData.push(newRow);\n      });\n  });\n  return newData;\n};\n\nexport const useData = () => {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    Promise.all(URLS.map(d => csv(d[1]))).then(sourceData => {\n      const data = sourceData.map((d, i) =>\n        nest()\n          .key(d => d['Country/Region'])\n          .key(d => d['date'])\n          .map(meltData(d, URLS[i][0]))\n      );\n      const locations = data[0].keys();\n      let combinedData = [];\n      locations.forEach(loc => {\n        const allData = data.map(d => d[`$${loc}`])\n        const dates = allData[0].keys();\n        dates.forEach(dd => {\n          const values = allData.map(d => d[`$${dd}`][0])\n          let newData = {};\n          ID_COLS.forEach(d => {\n            const val = values[0][d];\n            newData[d] = ['Lat', 'Long'].includes(d) ? +val : val;\n          });\n          newData['date'] = new Date(dd);\n          values.forEach((d,i) => {\n            const name = URLS[i][0];\n            newData[name] = d[name];\n          })\n          combinedData.push(newData);\n        });\n      });\n      const formatedData = nest()\n          .key(d => d['Country/Region'])\n          .sortValues((a, b) => a.date - b.date)\n          .map(combinedData)\n      setData(formatedData);\n    });\n  }, []);\n\n  return data;\n};\n","import React, { useMemo } from 'react';\nimport moment from 'moment';\nimport './Axis.css';\n\nexport const AxisBottom = ({\n  xScale,\n  boundedHeight,\n  boundedWidth,\n  label,\n  labelOffset,\n  tickSize,\n  tickOffset,\n  tickWidth,\n}) => {\n  const range = useMemo(() => xScale.range(), [xScale]);\n  const tickCount = useMemo(() => boundedWidth / tickWidth, [\n    boundedWidth,\n    tickWidth,\n  ]);\n\n  return (\n    <>\n      <path\n        className=\"line\"\n        d={['M', range[0], boundedHeight, 'H', range[1]].join(' ')}\n        // in case of not nice() scale\n        // d={['M', range[0], boundedHeight+6, 'v', -6, 'H', range[1], 'v', 6].join(' ')}\n        fill=\"none\"\n      />\n      {xScale.ticks(tickCount).map((tickValue, i) => (\n        <g\n          className=\"tick\"\n          key={i}\n          transform={`translate(${xScale(tickValue)},0)`}\n        >\n          <line y1={boundedHeight} y2={boundedHeight + tickSize} />\n          {/* <line y1={boundedHeight - tickSize} y2={boundedHeight} /> */}\n          <text\n            style={{ textAnchor: 'middle' }}\n            dy=\".71em\"\n            y={boundedHeight + tickOffset}\n          >\n            {moment(tickValue).format('Do MMM')}\n          </text>\n        </g>\n      ))}\n      {label && (\n        <text\n          className=\"label\"\n          x={boundedWidth / 2}\n          y={boundedHeight + labelOffset}\n          textAnchor=\"middle\"\n        >\n          {label}\n        </text>\n      )}\n    </>\n  );\n};\n","import React, { useMemo } from 'react';\nimport { format } from 'd3';\nimport './Axis.css';\n\nconst formatNumbers = format('.0s');\n\nexport const AxisLeft = ({\n  yScale,\n  boundedHeight,\n  boundedWidth,\n  label,\n  labelOffset,\n  tickSize,\n  tickOffset,\n  tickHeight,\n}) => {\n  const range = useMemo(() => yScale.range(), [yScale]);\n  const tickCount = useMemo(() => boundedHeight / tickHeight, [\n    boundedHeight,\n    tickHeight,\n  ]);\n  const logFormat = yScale.tickFormat(tickCount, '');\n\n  return (\n    <>\n      <path\n        className=\"line\"\n        d={['M', 0, range[1], 'v', range[0]].join(' ')}\n        fill=\"none\"\n      />\n      {yScale\n        .ticks(tickCount)\n        .filter(d => d >= 1)\n        .map(logFormat)\n        .filter(d => d !== '')\n        .map((tickValue, i) => (\n          <g\n            key={i}\n            className=\"tick\"\n            transform={`translate(0,${yScale(tickValue)})`}\n          >\n            <line x2={-tickSize} />\n            <text\n              key={tickValue}\n              style={{ textAnchor: 'end' }}\n              x={-tickOffset}\n              dy=\".32em\"\n            >\n              {formatNumbers(tickValue)}\n            </text>\n          </g>\n        ))}\n      {label && (\n        <text\n          className=\"label\"\n          textAnchor=\"middle\"\n          transform={`translate(${-labelOffset},${boundedHeight /\n            2}) rotate(-90)`}\n        >\n          {label}\n        </text>\n      )}\n    </>\n  );\n};\n","import React, { useState, useEffect, useRef } from 'react';\nimport { select, line, easeCubic } from 'd3';\nimport { interpolatePath } from 'd3-interpolate-path';\nimport { useSpring, animated } from 'react-spring';\nimport './Marks.css';\n\nconst Dot = ({ x, y, fill, transition, onPointerEnter, onPointerLeave }) => {\n  const [style, setStyle] = useSpring(() => ({\n    config: { duration: transition, easing: easeCubic },\n    cx: x,\n    cy: y,\n    fill: fill ? fill : '#efefef',\n  }));\n\n  useEffect(() => {\n    setStyle({\n      cx: x,\n      cy: y,\n      fill: fill ? fill : '#efefef',\n    });\n  }, [setStyle, x, y, fill]);\n\n  return (\n    <animated.circle\n      {...style}\n      onPointerEnter={onPointerEnter}\n      onPointerLeave={onPointerLeave}\n    />\n  );\n};\n\nexport const Marks = ({\n  data,\n  xScale,\n  yScale,\n  xValue,\n  yValue,\n  transition,\n  color,\n  getToolTipText,\n  setToolTipData,\n}) => {\n  const path = useRef(null);\n\n  useEffect(() => {\n    select(path.current)\n      .transition()\n      .duration(transition)\n      .attrTween('d', function() {\n        const prev = select(this).attr('d');\n        const current = line()\n          .x(d => xScale(xValue(d)))\n          .y(d => yScale(yValue(d)))(data);\n        return interpolatePath(prev, current);\n      });\n  }, [data, xScale, yScale, xValue, yValue, transition]);\n\n  return (\n    <g className=\"marks\">\n      <path ref={path} stroke={color} />\n      {data.map((d, i) => {\n        const x = xScale(xValue(d));\n        const y = yScale(yValue(d));\n        return (\n          <Dot\n            key={i}\n            x={x}\n            y={y}\n            fill={color}\n            transition={transition}\n            onPointerEnter={() =>\n              setToolTipData({ text: getToolTipText(d), x, y, color })\n            }\n            onPointerLeave={() => setToolTipData('')}\n          />\n        );\n      })}\n    </g>\n  );\n};\n","// from: https://wattenberger.com/blog/react-and-d3\n// npm i @juggle/resize-observer\nimport { ResizeObserver } from '@juggle/resize-observer';\nimport { useRef, useEffect, useState } from 'react';\n\n// possible chart settings:\n// const dimensions = {\n//   \"width\": 363,\n//   \"height\": 181,\n//   \"marginTop\": 56,\n//   \"marginRight\": 47,\n//   \"marginBottom\": 81,\n//   \"marginLeft\": 68\n// }\n\nconst combineChartDimensions = dimensions => {\n  const parsedDimensions = {\n      ...dimensions,\n      marginTop: dimensions.marginTop || 10,\n      marginRight: dimensions.marginRight || 10,\n      marginBottom: dimensions.marginBottom || 40,\n      marginLeft: dimensions.marginLeft || 75,\n  }\n\n  return {\n      ...parsedDimensions,\n      boundedHeight: Math.max(\n        parsedDimensions.height\n        - parsedDimensions.marginTop\n        - parsedDimensions.marginBottom,\n        0,\n      ),\n      boundedWidth: Math.max(\n        parsedDimensions.width\n        - parsedDimensions.marginLeft\n        - parsedDimensions.marginRight,\n        0,\n      ),\n  }\n}\n\nexport const useChartDimensions = passedSettings => {\n  const ref = useRef();\n  const dimensions = combineChartDimensions(passedSettings);\n  const [width, setWidth] = useState(0);\n  const [height, setHeight] = useState(0);\n\n  useEffect(() => {\n    if (dimensions.width && dimensions.height) return [ref, dimensions];\n    const element = ref.current;\n    const resizeObserver = new ResizeObserver(entries => {\n      if (!Array.isArray(entries)) return;\n      if (!entries.length) return;\n      const entry = entries[0];\n      if (width !== entry.contentRect.width) setWidth(entry.contentRect.width);\n      if (height !== entry.contentRect.height)\n        setHeight(entry.contentRect.height);\n    });\n    resizeObserver.observe(element);\n    return () => resizeObserver.unobserve(element);\n  }, []);\n\n  const newSettings = combineChartDimensions({\n    ...dimensions,\n    width: dimensions.width || width,\n    height: dimensions.height || height,\n  });\n\n  return [ref, newSettings];\n};\n","import React from 'react';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport Chip from '@material-ui/core/Chip';\nimport './SelectLocation.css';\nimport { ascending } from 'd3';\n\nconst LocationTag = ({ tag, color, onDelete }) => (\n  <Chip\n    className=\"location-tag\"\n    label={tag}\n    onDelete={e => onDelete(e, tag)}\n    style={{ backgroundColor: color, color: 'white' }}\n  />\n);\n\nexport const SelectLocation = ({\n  locations,\n  values,\n  colors,\n  colorScheme,\n  onChange,\n  onDelete,\n}) => {\n  return (\n    <Autocomplete\n      className=\"autocomplete\"\n      multiple\n      options={locations.sort(ascending)}\n      // getOptionLabel={option => option.title}\n      value={values}\n      onChange={onChange}\n      renderInput={params => (\n        <TextField {...params} variant=\"standard\" label=\"Select locations\" />\n      )}\n      renderTags={tag =>\n        tag.map((d, i) => (\n          <LocationTag\n            key={i}\n            tag={d}\n            color={colorScheme[colors[d] % colorScheme.length]}\n            onDelete={onDelete}\n          />\n        ))\n      }\n    />\n  );\n};\n","import React from 'react';\nimport './ChartToolTip.css';\n\nexport const ChartToolTip = ({ text, x, y, color }) => {\n  return (\n    <div\n      className=\"wrapper\"\n      style={{\n        transform: `translate(${x}px,${y + 30}px)`,\n        backgroundColor: color,\n        opacity: text ? 0.75 : 0,\n      }}\n    >\n      <div className=\"chart-tooltip\">{text}</div>\n    </div>\n  );\n};\n","import React, { useMemo, useState, useEffect } from 'react';\nimport { scaleTime, extent, max, scaleLog, schemeTableau10 } from 'd3';\nimport { AxisBottom } from './AxisBottom';\nimport { AxisLeft } from './AxisLeft';\nimport { Marks } from './Marks';\nimport { useChartDimensions } from './useChartDimensions';\nimport { SelectLocation } from './SelectLocation';\nimport { ChartToolTip } from './ChartToolTip';\nimport './LineChart.css';\nimport { Button, Col, Row } from 'react-bootstrap';\n\nexport const LineChart = ({\n  title,\n  data,\n  dimensions,\n  xAxis,\n  yAxis,\n  xValues,\n  yValues,\n  transitions,\n  defaultLocations,\n  getToolTipText,\n  onClose,\n}) => {\n  const [ref, dms] = useChartDimensions(dimensions);\n  const {\n    width,\n    height,\n    marginLeft,\n    marginTop,\n    marginBottom,\n    marginRight,\n    boundedHeight,\n    boundedWidth,\n  } = dms;\n\n  const [selection, setSelection] = useState(defaultLocations);\n  const [colors, setColors] = useState({});\n  const [toolTipData, setToolTipData] = useState();\n\n  const selectedData = useMemo(() => {\n    if (data) return selection.map(d => data[`$${d}`]);\n  }, [data, selection]);\n\n  const xScale = useMemo(() => {\n    if (!selectedData) return;\n    const domain = extent(selectedData.map(d => d.map(xValues)).flat());\n    return scaleTime()\n      .domain(domain)\n      .range([0, boundedWidth])\n      .nice();\n  }, [selectedData, xValues, boundedWidth]);\n\n  const yScale = useMemo(() => {\n    if (!selectedData) return;\n    const domain = [0.1, max(selectedData.map(d => d.map(yValues)).flat())];\n    return scaleLog()\n      .domain(domain)\n      .range([boundedHeight, 0])\n      .nice();\n  }, [selectedData, yValues, boundedHeight]);\n\n  useEffect(() => {\n    if (!data) return;\n    setColors(current => {\n      const currentKeys = Object.keys(current);\n      if (currentKeys.length === 0) {\n        let newColors = {};\n        selection.forEach((d, i) => (newColors[d] = i));\n        return newColors;\n      }\n      const currentColors = Object.values(current);\n      let newColors = Object.assign({}, current);\n      // Adding locations\n      selection\n        .filter(d => !currentKeys.includes(d))\n        .forEach(d => {\n          let idx = 0;\n          while (currentColors.includes(idx)) {\n            idx++;\n          }\n          newColors[d] = idx;\n        });\n      // Removing a location\n      currentKeys\n        .filter(d => !selection.includes(d))\n        .forEach(d => {\n          delete newColors[d];\n        });\n      return newColors;\n    });\n  }, [data, selection]);\n\n  const marks = useMemo(() => {\n    if (selectedData)\n      return (\n        <>\n          {selectedData.map((d, i) => {\n            const location = d[0]['Country/Region'];\n            const color =\n              schemeTableau10[colors[location] % schemeTableau10.length];\n\n            return (\n              <Marks\n                key={location}\n                data={d}\n                xScale={xScale}\n                yScale={yScale}\n                xValue={xValues}\n                yValue={yValues}\n                transition={transitions.lines}\n                color={color}\n                getToolTipText={getToolTipText}\n                setToolTipData={setToolTipData}\n              />\n            );\n          })}\n        </>\n      );\n  }, [\n    colors,\n    getToolTipText,\n    selectedData,\n    transitions.lines,\n    xScale,\n    xValues,\n    yScale,\n    yValues,\n  ]);\n\n  return (\n    <div className=\"chart\">\n      <Row className=\"chart-selector justify-content-center\">\n        <Col md={11}>\n          <SelectLocation\n            locations={data ? data.keys() : defaultLocations}\n            values={selection}\n            colors={colors}\n            colorScheme={schemeTableau10}\n            onChange={(e, d) => setSelection(d)}\n            onDelete={(e, d) =>\n              setSelection(current => {\n                const idx = current.indexOf(d);\n                const newSelection = current.slice();\n                newSelection.splice(idx, 1);\n                return newSelection;\n              })\n            }\n          />\n        </Col>\n        <Col md={1}>\n          <Button\n            variant=\"outline-danger close-button\"\n            size=\"sm\"\n            onClick={onClose}\n          >\n            <span>x</span>\n          </Button>\n        </Col>\n      </Row>\n      <div className=\"chart-container\" ref={ref}>\n        <ChartToolTip {...toolTipData} />\n        <svg width={width} height={height}>\n          <g transform={`translate(${marginLeft},${marginTop})`}>\n            {title && (\n              <text\n                className=\"title\"\n                x={boundedWidth / 2 + title.dx}\n                y={title.dy}\n                textAnchor=\"middle\"\n              >\n                {title.label}\n              </text>\n            )}\n            {selectedData ? (\n              <>\n                <AxisBottom\n                  xScale={xScale}\n                  boundedHeight={boundedHeight}\n                  boundedWidth={boundedWidth}\n                  {...xAxis}\n                />\n                <AxisLeft\n                  yScale={yScale}\n                  boundedHeight={boundedHeight}\n                  boundedWidth={boundedWidth}\n                  {...yAxis}\n                />\n                {marks}\n              </>\n            ) : (\n              <text>Loading...</text>\n            )}\n          </g>\n        </svg>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport moment from 'moment';\nimport { format } from 'd3';\nimport { useData } from './useData';\nimport { LineChart } from './LineChart';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\n\nconst numberFormat = format(',');\n\nconst getToolTipText = d =>\n  `${moment(d['date']).format('Do MMM')}\n  Country: ${d['Country/Region']}\n  Confirmed: ${numberFormat(d['Confirmed'])}\n  Deaths: ${numberFormat(d['Deaths'])}\n  Recovered: ${numberFormat(d['Recovered'])}`;\n\nconst chartConfig = {\n  // title: {\n  //   label: 'Testing',\n  //   dx: 0,\n  //   dy: -20,\n  // },\n  dimensions: {\n    marginTop: 10,\n    marginRight: 35,\n    marginBottom: 30,\n    marginLeft: 75,\n  },\n  xAxis: {\n    tickSize: 6,\n    tickOffset: 15,\n    tickWidth: 130,\n  },\n  yAxis: {\n    label: 'Cases',\n    labelOffset: 50,\n    tickSize: 6,\n    tickOffset: 10,\n    tickHeight: 100,\n  },\n  xValues: d => d.date,\n  yValues: d => (d.Confirmed === 0 ? 0.1 : d.Confirmed),\n  transitions: {\n    lines: 500,\n  },\n  defaultLocations: ['Peru', 'Australia', 'Iran', 'Italy'],\n  getToolTipText,\n};\n\n// Pcrovine/State: \"\"\n// Country/Region: \"Peru\"\n// Lat: -9.19\n// Long: -75.0152\n// date: Fri Mar 20 2020 00:00:00 GMT+1030 (Australian Central Daylight Time) {}\n// Confirmed: 234\n// Deaths: 3\n// Recovered: 1\n// __proto__: Object\nfunction App() {\n  const data = useData();\n  const [charts, setCharts] = useState([0]);\n\n  return (\n    <Container className=\"app-container\">\n      <header>\n        <h1 className=\"mt-4 mb-4\">Covid 2019</h1>\n      </header>\n\n      <main className=\"app-main\">\n        <Row>\n          <Col>\n            <p>\n              Plots of coronavirus data (\n              <a\n                href=\"https://github.com/CSSEGISandData/COVID-19/tree/master/csse_covid_19_data\"\n                target=\"_black\"\n              >\n                source\n              </a>\n              ).\n            </p>\n          </Col>\n        </Row>\n\n        <Row>\n          {charts.map(i => (\n            <Col key={i} md={12} xl={charts.length > 1 ? 6 : 12}>\n              <LineChart\n                data={data}\n                onClose={() =>\n                  setCharts(d => {\n                    const idx = d.indexOf(i);\n                    const out = d.slice();\n                    out.splice(idx, 1);\n                    return out;\n                  })\n                }\n                {...chartConfig}\n              />\n            </Col>\n          ))}\n        </Row>\n        <Row className=\"mt-2\">\n          <Col className=\"text-right\">\n            <Button\n              onClick={() =>\n                setCharts(d => {\n                  const idx = d.length === 0 ? 0 : d[d.length - 1] + 1;\n                  return d.concat(idx);\n                })\n              }\n            >\n              Add Chart\n            </Button>\n          </Col>\n        </Row>\n      </main>\n\n      <footer>\n        <Row>\n          <Col className=\"mt-4 text-right\">\n            <a href=\"https://github.com/renato145/covid2019\" target=\"_black\">\n              Source code\n            </a>\n          </Col>\n        </Row>\n      </footer>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}