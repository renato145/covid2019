{"version":3,"sources":["AxisBottom.js","AxisLeft.js","Marks.js","useChartDimensions.js","SelectLocation.js","LineChart.js","App.js","useData.js","index.js"],"names":["AxisBottom","xScale","boundedHeight","boundedWidth","label","labelOffset","tickSize","tickOffset","range","useMemo","className","d","join","fill","ticks","map","tickValue","i","key","transform","y1","y2","style","textAnchor","dy","y","moment","format","x","AxisLeft","yScale","x2","Dot","r","transition","ref","useRef","useSpring","config","duration","easing","easeCubic","cx","cy","circle","Marks","data","xValue","yValue","radius","path","useEffect","select","current","attrTween","prev","this","attr","line","interpolatePath","combineChartDimensions","dimensions","parsedDimensions","marginTop","marginRight","marginBottom","marginLeft","Math","max","height","width","SelectLocation","locations","selection","setSelection","value","onChange","e","target","LineChart","title","xAxis","yAxis","xValues","yValues","markRadius","transitions","defaultLocation","onClose","passedSettings","useState","setWidth","setHeight","element","resizeObserver","ResizeObserver","entries","Array","isArray","length","entry","contentRect","observe","unobserve","newSettings","useChartDimensions","dms","selectedData","domain","extent","scaleTime","nice","scaleLinear","Row","Col","md","keys","Button","variant","size","onClick","dx","lines","chartConfig","date","total_cases","App","url","setData","csv","Date","location","new_cases","new_deaths","total_deaths","then","sourceData","nest","sortKeys","ascending","sortValues","a","b","useData","charts","setCharts","Container","idx","indexOf","out","slice","splice","concat","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2b3b178d.chunk.js","sourcesContent":["import React, { useMemo } from 'react';\nimport moment from 'moment';\nimport './Axis.css';\n\nexport const AxisBottom = ({\n  xScale,\n  boundedHeight,\n  boundedWidth,\n  label,\n  labelOffset,\n  tickSize,\n  tickOffset,\n}) => {\n  const range = useMemo(() => xScale.range(), [xScale]);\n\n  return (\n    <>\n      <path\n        className=\"line\"\n        d={['M', range[0], boundedHeight, 'H', range[1]].join(' ')}\n        // in case of not nice() scale\n        // d={['M', range[0], boundedHeight+6, 'v', -6, 'H', range[1], 'v', 6].join(' ')}\n        fill=\"none\"\n      />\n      {xScale.ticks().map((tickValue, i) => (\n        <g\n          className=\"tick\"\n          key={i}\n          transform={`translate(${xScale(tickValue)},0)`}\n        >\n          <line y1={boundedHeight} y2={boundedHeight + tickSize} />\n          {/* <line y1={boundedHeight - tickSize} y2={boundedHeight} /> */}\n          <text\n            style={{ textAnchor: 'middle' }}\n            dy=\".71em\"\n            y={boundedHeight + tickOffset}\n          >\n            {moment(tickValue).format('Do MMM')}\n          </text>\n        </g>\n      ))}\n      {label && (\n        <text\n          className=\"label\"\n          x={boundedWidth / 2}\n          y={boundedHeight + labelOffset}\n          textAnchor=\"middle\"\n        >\n          {label}\n        </text>\n      )}\n    </>\n  );\n};\n","import React, { useMemo } from 'react';\nimport './Axis.css';\n\nexport const AxisLeft = ({\n  yScale,\n  boundedHeight,\n  boundedWidth,\n  label,\n  labelOffset,\n  tickSize,\n  tickOffset,\n}) => {\n  const range = useMemo(() => yScale.range(), [yScale]);\n\n  return (\n    <>\n      <path\n        className=\"line\"\n        d={['M', 0, range[1], 'v', range[0]].join(' ')}\n        fill=\"none\"\n      />\n      {yScale.ticks().map((tickValue, i) => (\n        <g\n          key={i}\n          className=\"tick\"\n          transform={`translate(0,${yScale(tickValue)})`}\n        >\n          <line x2={-tickSize} />\n          <text\n            key={tickValue}\n            style={{ textAnchor: 'end' }}\n            x={-tickOffset}\n            dy=\".32em\"\n          >\n            {tickValue}\n          </text>\n        </g>\n      ))}\n      {label && (\n        <text\n          className=\"label\"\n          textAnchor=\"middle\"\n          transform={`translate(${-labelOffset},${boundedHeight /\n            2}) rotate(-90)`}\n        >\n          {label}\n        </text>\n      )}\n    </>\n  );\n};\n","import React, { useEffect, useRef } from 'react';\nimport { select, line, easeCubic } from 'd3';\nimport { interpolatePath } from 'd3-interpolate-path';\nimport { useSpring, animated } from 'react-spring';\nimport './Marks.css';\n\nconst Dot = ({ x, y, r, transition }) => {\n  const ref = useRef();\n\n  const style = useSpring({\n    config: { duration: transition, easing: easeCubic },\n    r: r,\n    cx: x,\n    cy: y,\n  });\n\n  return <animated.circle {...style} ref={ref} />;\n};\n\nexport const Marks = ({\n  data,\n  xScale,\n  yScale,\n  xValue,\n  yValue,\n  transition,\n  radius,\n}) => {\n  const path = useRef(null);\n\n  useEffect(() => {\n    select(path.current)\n      .transition()\n      .duration(transition)\n      .attrTween('d', function() {\n        const prev = select(this).attr('d');\n        const current = line()\n          .x(d => xScale(xValue(d)))\n          .y(d => yScale(yValue(d)))(data);\n        return interpolatePath(prev, current);\n      });\n  }, [data, xScale, yScale, xValue, yValue, transition]);\n\n  return (\n    <g className=\"marks\">\n      <path ref={path} />\n      {data.map((d, i) => (\n        <Dot\n          key={i}\n          x={xScale(xValue(d))}\n          y={yScale(yValue(d))}\n          r={radius}\n          transition={transition}\n        />\n      ))}\n    </g>\n  );\n};\n","// from: https://wattenberger.com/blog/react-and-d3\n// npm i @juggle/resize-observer\nimport { ResizeObserver } from '@juggle/resize-observer';\nimport { useRef, useEffect, useState } from 'react';\n\n// possible chart settings:\n// const dimensions = {\n//   \"width\": 363,\n//   \"height\": 181,\n//   \"marginTop\": 56,\n//   \"marginRight\": 47,\n//   \"marginBottom\": 81,\n//   \"marginLeft\": 68\n// }\n\nconst combineChartDimensions = dimensions => {\n  const parsedDimensions = {\n      ...dimensions,\n      marginTop: dimensions.marginTop || 10,\n      marginRight: dimensions.marginRight || 10,\n      marginBottom: dimensions.marginBottom || 40,\n      marginLeft: dimensions.marginLeft || 75,\n  }\n\n  return {\n      ...parsedDimensions,\n      boundedHeight: Math.max(\n        parsedDimensions.height\n        - parsedDimensions.marginTop\n        - parsedDimensions.marginBottom,\n        0,\n      ),\n      boundedWidth: Math.max(\n        parsedDimensions.width\n        - parsedDimensions.marginLeft\n        - parsedDimensions.marginRight,\n        0,\n      ),\n  }\n}\n\nexport const useChartDimensions = passedSettings => {\n  const ref = useRef();\n  const dimensions = combineChartDimensions(passedSettings);\n  const [width, setWidth] = useState(0);\n  const [height, setHeight] = useState(0);\n\n  useEffect(() => {\n    if (dimensions.width && dimensions.height) return [ref, dimensions];\n    const element = ref.current;\n    const resizeObserver = new ResizeObserver(entries => {\n      if (!Array.isArray(entries)) return;\n      if (!entries.length) return;\n      const entry = entries[0];\n      if (width !== entry.contentRect.width) setWidth(entry.contentRect.width);\n      if (height !== entry.contentRect.height)\n        setHeight(entry.contentRect.height);\n    });\n    resizeObserver.observe(element);\n    return () => resizeObserver.unobserve(element);\n  }, []);\n\n  const newSettings = combineChartDimensions({\n    ...dimensions,\n    width: dimensions.width || width,\n    height: dimensions.height || height,\n  });\n\n  return [ref, newSettings];\n};\n","import React from 'react';\nimport './SelectLocation.css';\n\nexport const SelectLocation = ({ locations, selection, setSelection }) => {\n  return (\n    <>\n      <label className=\"selection-label mb-0 ml-2\">Select location</label>\n      <select\n        value={selection}\n        className=\"custom-select\"\n        onChange={e => setSelection(e.target.value)}\n      >\n        {locations.map((d, i) => (\n          <option key={i} value={d}>\n            {d}\n          </option>\n        ))}\n      </select>\n    </>\n  );\n};\n","import React, { useMemo, useState } from 'react';\nimport { scaleTime, extent, scaleLinear } from 'd3';\nimport { AxisBottom } from './AxisBottom';\nimport { AxisLeft } from './AxisLeft';\nimport { Marks } from './Marks';\nimport { useChartDimensions } from './useChartDimensions';\nimport { SelectLocation } from './SelectLocation';\nimport './LineChart.css';\nimport { Button, Col, Row } from 'react-bootstrap';\n\nexport const LineChart = ({\n  title,\n  data,\n  dimensions,\n  xAxis,\n  yAxis,\n  xValues,\n  yValues,\n  markRadius,\n  transitions,\n  defaultLocation,\n  onClose,\n}) => {\n  const [ref, dms] = useChartDimensions(dimensions);\n  const {\n    width,\n    height,\n    marginLeft,\n    marginTop,\n    marginBottom,\n    marginRight,\n    boundedHeight,\n    boundedWidth,\n  } = dms;\n\n  const [selection, setSelection] = useState(defaultLocation);\n\n  const selectedData = useMemo(() => {\n    if (data) return data[`$${selection}`];\n  }, [data, selection]);\n\n  const xScale = useMemo(() => {\n    if (!selectedData) return;\n    const domain = extent(selectedData.map(xValues));\n    return scaleTime()\n      .domain(domain)\n      .range([0, boundedWidth])\n      .nice();\n  }, [selectedData, xValues, boundedWidth]);\n\n  const yScale = useMemo(() => {\n    if (!selectedData) return;\n    const domain = extent(selectedData.map(yValues));\n    return scaleLinear()\n      .domain(domain)\n      .range([boundedHeight, 0])\n      .nice();\n  }, [selectedData, yValues, boundedHeight]);\n\n  return (\n    <div className=\"mt-3 mb-3 h-75\">\n      <Row className=\"justify-content-center\">\n        <Col md={11}>\n          <SelectLocation\n            locations={data ? data.keys() : [selection]}\n            selection={selection}\n            setSelection={setSelection}\n          />\n        </Col>\n        <Col md={1}>\n          <Button variant=\"outline-danger\" size=\"sm\" onClick={onClose}>\n            <span>x</span>\n          </Button>\n        </Col>\n      </Row>\n      <div className=\"chart-container h-100\" ref={ref}>\n        <svg width={width} height={height}>\n          <g transform={`translate(${marginLeft},${marginTop})`}>\n            {title && (\n              <text\n                className=\"title\"\n                x={boundedWidth / 2 + title.dx}\n                y={title.dy}\n                textAnchor=\"middle\"\n              >\n                {title.label}\n              </text>\n            )}\n            {selectedData ? (\n              <>\n                <AxisBottom\n                  xScale={xScale}\n                  boundedHeight={boundedHeight}\n                  boundedWidth={boundedWidth}\n                  {...xAxis}\n                />\n                <AxisLeft\n                  yScale={yScale}\n                  boundedHeight={boundedHeight}\n                  boundedWidth={boundedWidth}\n                  {...yAxis}\n                />\n                <Marks\n                  data={selectedData}\n                  xScale={xScale}\n                  yScale={yScale}\n                  xValue={xValues}\n                  yValue={yValues}\n                  transition={transitions.lines}\n                  radius={markRadius}\n                />\n              </>\n            ) : (\n              <text>Loading...</text>\n            )}\n          </g>\n        </svg>\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useMemo } from 'react';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport { useData } from './useData';\nimport { LineChart } from './LineChart';\nimport { range } from 'd3';\n\nconst SOURCE = 'https://covid.ourworldindata.org/data/full_data.csv';\nconst chartConfig = {\n  title: {\n    label: 'Testing',\n    dx: 0,\n    dy: -20,\n  },\n  dimensions: {\n    marginTop: 40,\n    marginRight: 35,\n    marginBottom: 30,\n    marginLeft: 75,\n  },\n  xAxis: {\n    tickSize: 6,\n    tickOffset: 15,\n  },\n  yAxis: {\n    label: 'Cases',\n    labelOffset: 50,\n    tickSize: 6,\n    tickOffset: 10,\n  },\n  xValues: d => d.date,\n  yValues: d => d.total_cases,\n  markRadius: 9,\n  transitions: {\n    lines: 1000,\n  },\n  defaultLocation: 'Peru',\n};\n\nfunction App() {\n  const data = useData({ url: SOURCE });\n  const [charts, setCharts] = useState([0]);\n\n  return (\n    <Container>\n      <header>\n        <h1 className=\"mt-4 mb-4\">Covid 2019</h1>\n      </header>\n\n      <Row>\n        {charts.map(i => (\n          <Col key={i} md={12}>\n            <LineChart data={data} onClose={() => setCharts(d => {\n              const idx = d.indexOf(i);\n              const out = d.slice();\n              out.splice(idx, 1);\n              return out;\n\n            })} {...chartConfig} />\n          </Col>\n        ))}\n      </Row>\n      <Row className=\"mt-2\">\n        <Col>\n          <Button\n            onClick={() => setCharts(d => d.concat([d[d.length - 1] + 1]))}\n          >\n            Add Chart\n          </Button>\n        </Col>\n      </Row>\n\n      <footer>\n        <Row>\n          <Col className=\"mt-4 text-right\">\n            <a href=\"https://github.com/renato145/covid2019\" target=\"_black\">\n              Source code\n            </a>\n          </Col>\n        </Row>\n      </footer>\n    </Container>\n  );\n}\n\nexport default App;\n","import { csv, nest, ascending } from 'd3';\nimport { useState, useEffect } from 'react';\n\nexport const useData = ({ url }) => {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    csv(url, d => ({\n      date: new Date(d.date),\n      location: d.location,\n      new_cases: +d.new_cases,\n      new_deaths: +d.new_deaths,\n      total_cases: +d.total_cases,\n      total_deaths: +d.total_deaths,\n    })).then(sourceData => {\n      setData(\n        nest()\n          .key(d => d.location)\n          .sortKeys(ascending)\n          .sortValues((a, b) => a.date - b.date)\n          .map(sourceData)\n      );\n    });\n  }, [url]);\n\n  return data;\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}