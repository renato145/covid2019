{"version":3,"sources":["useData.js","AxisBottom.js","AxisLeft.js","Marks.js","utils.js","useChartDimensions.js","SelectLocation.js","ChartToolTip.js","ToogleSwitch.js","LineChart.js","App.js","index.js"],"names":["URLS","ID_COLS","customAnnotations","Peru","useData","useState","data","setData","useEffect","Promise","all","map","d","csv","then","sourceData","i","nest","key","name","newData","forEach","row","Object","keys","filter","col","includes","newRow","push","meltData","locations","combinedData","loc","allData","dates","idxConfirmed","idxDeaths","locAnn","dd","values","val","dateAnn","groupValues","reduce","acc","Date","formatedData","sortValues","a","b","date","AxisBottom","xScale","boundedHeight","boundedWidth","label","labelOffset","tickSize","tickOffset","tickWidth","tickWidthDate","range","useMemo","tickCount","className","join","fill","ticks","tickValue","transform","y1","y2","style","textAnchor","dy","y","moment","format","x","formatNumbers","AxisLeft","yScale","tickHeight","logFormat","tickFormat","x2","Dot","transition","onPointerEnter","onPointerLeave","useSpring","config","duration","easing","easeCubicOut","cx","cy","r","setStyle","circle","Marks","xValue","yValue","color","setToolTipData","marginRight","marginLeft","path","useRef","select","current","ease","attrTween","prev","this","attr","line","interpolatePath","ref","stroke","value","min","max","up","combineChartDimensions","dimensions","parsedDimensions","marginTop","marginBottom","Math","height","width","LocationTag","tag","onDelete","Chip","e","backgroundColor","SelectLocation","colors","colorScheme","onChange","Autocomplete","multiple","options","sort","ascending","renderInput","params","TextField","variant","renderTags","length","numberFormat","ChartToolTip","text","country","confirmed","deaths","recovered","opacity","TextLabel","styled","active","right","left","SwitchLabel","Slider","span","inactiveColor","ballSize","ballMargin","activeColor","move","ToogleSwitch","preLabel","type","checked","LineChart","title","xAxis","yAxis","transitions","defaultLocations","onClose","passedSettings","setWidth","setHeight","element","resizeObserver","ResizeObserver","entries","Array","isArray","entry","contentRect","observe","unobserve","newSettings","useChartDimensions","dms","selection","setSelection","setColors","toolTipData","switchXValue","setSwitchXValue","switchXAxis","setSwitchXAxis","xValues","useCallback","yValues","selectedData","o","domain","extent","flat","scaleLinear","scaleTime","scaleLog","nice","currentKeys","newColors","currentColors","assign","idx","annotations","dx","note","lineType","align","wrap","orientation","subject","radius","radiusPadding","marks","location","schemeTableau10","lines","Row","Col","indexOf","newSelection","slice","splice","Button","size","onClick","sm","md","props","chartConfig","App","charts","setCharts","Container","href","target","xl","out","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.21af6cce.chunk.js","sourcesContent":["import { csv, nest } from 'd3';\nimport { useState, useEffect } from 'react';\n\nconst URLS = [\n  [\n    'Confirmed',\n    'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv',\n  ],\n  [\n    'Deaths',\n    'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv',\n  ],\n  [\n    'Recovered',\n    'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_recovered_global.csv',\n  ],\n];\nconst ID_COLS = ['Province/State', 'Country/Region', 'Lat', 'Long'];\n\nconst meltData = (data, name) => {\n  let newData = [];\n  data.forEach(row => {\n    Object.keys(row)\n      .filter(col => !ID_COLS.includes(col))\n      .forEach(col => {\n        if (row[col] === '') return;\n        let newRow = {};\n        ID_COLS.forEach(d => (newRow[d] = row[d]));\n        newRow['date'] = col;\n        newRow[name] = +row[col];\n        newData.push(newRow);\n      });\n  });\n  return newData;\n};\n\nconst customAnnotations = {\n  Peru: {\n    '3/16/20': 'Quarantine starts'\n  }\n};\n\nexport const useData = () => {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    Promise.all(URLS.map(d => csv(d[1]))).then(sourceData => {\n      const data = sourceData.map((d, i) =>\n        nest()\n          .key(d => d['Country/Region'])\n          .key(d => d['date'])\n          .map(meltData(d, URLS[i][0]))\n      );\n      const locations = data[0].keys();\n      let combinedData = [];\n      locations.forEach(loc => {\n        const allData = data.map(d => d[`$${loc}`]).filter(d => d);\n        const dates = allData[0].keys();\n        let idxConfirmed = -1;\n        let idxDeaths = -1;\n        const locAnn = customAnnotations[loc];\n        dates.forEach(dd => {\n          const values = allData.map(d => d[`$${dd}`]);\n          let newData = {};\n          ID_COLS.forEach(d => {\n            const val = values[0][0][d];\n            newData[d] = ['Lat', 'Long'].includes(d) ? +val : val;\n            if (locAnn) {\n              const dateAnn = locAnn[dd];\n              if (dateAnn) newData['annotation'] = dateAnn;\n            }\n          });\n          values.forEach((groupValues, i) => {\n            if (!groupValues) return;\n            const name = URLS[i][0];\n            newData[name] = groupValues\n              .map(val => val[name])\n              .reduce((acc, val) => val + acc);\n          });\n          if (newData['Confirmed'] > 0) {\n            idxConfirmed++;\n            newData['date'] = new Date(dd);\n            newData['idxConfirmed'] = idxConfirmed;\n            if (newData['Deaths'] > 0) {\n              idxDeaths++;\n              newData['idxDeaths'] = idxDeaths;\n            }\n            combinedData.push(newData);\n          }\n        });\n      });\n      const formatedData = nest()\n        .key(d => d['Country/Region'])\n        .sortValues((a, b) => a.date - b.date)\n        .map(combinedData);\n      setData(formatedData);\n    });\n  }, []);\n\n  return data;\n};\n","import React, { useMemo } from 'react';\nimport moment from 'moment';\nimport './Axis.css';\n\nexport const AxisBottom = ({\n  xScale,\n  boundedHeight,\n  boundedWidth,\n  date,\n  label,\n  labelOffset,\n  tickSize,\n  tickOffset,\n  tickWidth,\n  tickWidthDate\n}) => {\n  const range = useMemo(() => xScale.range(), [xScale]);\n  const tickCount = useMemo(() => boundedWidth / (date ? tickWidthDate : tickWidth), [\n    boundedWidth,\n    tickWidth,\n    tickWidthDate,\n    date\n  ]);\n\n  return (\n    <>\n      <path\n        className=\"line\"\n        d={['M', range[0], boundedHeight, 'H', range[1]].join(' ')}\n        // in case of not nice() scale\n        // d={['M', range[0], boundedHeight+6, 'v', -6, 'H', range[1], 'v', 6].join(' ')}\n        fill=\"none\"\n      />\n      {xScale.ticks(tickCount).map((tickValue, i) => (\n        <g\n          className=\"tick\"\n          key={i}\n          transform={`translate(${xScale(tickValue)},0)`}\n        >\n          <line y1={boundedHeight} y2={boundedHeight + tickSize} />\n          {/* <line y1={boundedHeight - tickSize} y2={boundedHeight} /> */}\n          <text\n            style={{ textAnchor: 'middle' }}\n            dy=\".71em\"\n            y={boundedHeight + tickOffset}\n          >\n            {date ? moment(tickValue).format('Do MMM') : tickValue}\n          </text>\n        </g>\n      ))}\n      {label && (\n        <text\n          className=\"label\"\n          x={boundedWidth / 2}\n          y={boundedHeight + labelOffset}\n          textAnchor=\"middle\"\n        >\n          {label}\n        </text>\n      )}\n    </>\n  );\n};\n","import React, { useMemo } from 'react';\nimport { format } from 'd3';\nimport './Axis.css';\n\nconst formatNumbers = format('.0s');\n\nexport const AxisLeft = ({\n  yScale,\n  boundedHeight,\n  boundedWidth,\n  label,\n  labelOffset,\n  tickSize,\n  tickOffset,\n  tickHeight,\n}) => {\n  const range = useMemo(() => yScale.range(), [yScale]);\n  const tickCount = useMemo(() => boundedHeight / tickHeight, [\n    boundedHeight,\n    tickHeight,\n  ]);\n  const logFormat = yScale.tickFormat(tickCount, '');\n\n  return (\n    <>\n      <path\n        className=\"line\"\n        d={['M', 0, range[1], 'v', range[0]].join(' ')}\n        fill=\"none\"\n      />\n      {yScale\n        .ticks(tickCount)\n        .filter(d => d >= 1)\n        .map(logFormat)\n        .filter(d => d !== '')\n        .map((tickValue, i) => (\n          <g\n            key={i}\n            className=\"tick\"\n            transform={`translate(0,${yScale(tickValue)})`}\n          >\n            <line x2={-tickSize} />\n            <line className=\"axis-line\" x2={boundedWidth} />\n            <text\n              key={tickValue}\n              style={{ textAnchor: 'end' }}\n              x={-tickOffset}\n              dy=\".32em\"\n            >\n              {formatNumbers(tickValue)}\n            </text>\n          </g>\n        ))}\n      {label && (\n        <text\n          className=\"label\"\n          textAnchor=\"middle\"\n          transform={`translate(${-labelOffset},${boundedHeight /\n            2}) rotate(-90)`}\n        >\n          {label}\n        </text>\n      )}\n    </>\n  );\n};\n","import React, { useEffect, useRef } from 'react';\nimport { select, line, easeCubicOut } from 'd3';\nimport { interpolatePath } from 'd3-interpolate-path';\nimport { useSpring, animated } from 'react-spring';\nimport { clamp } from './utils';\nimport './Marks.css';\n\nconst Dot = ({ x, y, fill, transition, onPointerEnter, onPointerLeave }) => {\n  const [style, setStyle] = useSpring(() => ({\n    config: { duration: transition, easing: easeCubicOut },\n    cx: x,\n    cy: y,\n    r: 0,\n    fill: fill ? fill : '#efefef',\n  }));\n\n  useEffect(() => {\n    setStyle({\n      cx: x,\n      cy: y,\n      r: 5,\n      fill: fill ? fill : '#efefef',\n    });\n  }, [setStyle, x, y, fill]);\n\n  return (\n    <animated.circle\n      {...style}\n      onPointerEnter={onPointerEnter}\n      onPointerLeave={onPointerLeave}\n    />\n  );\n};\n\nexport const Marks = ({\n  data,\n  xScale,\n  yScale,\n  xValue,\n  yValue,\n  transition,\n  color,\n  setToolTipData,\n  marginRight,\n  marginLeft,\n  boundedWidth,\n  boundedHeight,\n}) => {\n  const path = useRef(null);\n\n  useEffect(() => {\n    select(path.current)\n      .transition()\n      .duration(transition)\n      .ease(easeCubicOut)\n      .attrTween('d', function() {\n        const prev = select(this).attr('d');\n        const current = line()\n          .x(d => xScale(xValue(d)))\n          .y(d => yScale(yValue(d)))(data);\n        return interpolatePath(prev, current);\n      });\n  }, [data, xScale, yScale, xValue, yValue, transition]);\n\n  return (\n    <g className=\"marks\">\n      <path ref={path} stroke={color} />\n      {data.map((d, i) => {\n        const x = xScale(xValue(d));\n        const y = yScale(yValue(d));\n        return (\n          <Dot\n            key={i}\n            x={x}\n            y={y}\n            fill={color}\n            transition={transition}\n            onPointerEnter={() =>\n              setToolTipData({\n                data: d,\n                x: clamp(x, marginLeft, boundedWidth - marginRight - 25),\n                y,\n                up: y > boundedHeight / 2,\n                color,\n              })\n            }\n            onPointerLeave={() => setToolTipData('')}\n          />\n        );\n      })}\n    </g>\n  );\n};\n","export const clamp = (value, min, max) =>\n  value >= max ? max : value <= min ? min : value;\n","// from: https://wattenberger.com/blog/react-and-d3\n// npm i @juggle/resize-observer\nimport { ResizeObserver } from '@juggle/resize-observer';\nimport { useRef, useEffect, useState } from 'react';\n\n// possible chart settings:\n// const dimensions = {\n//   \"width\": 363,\n//   \"height\": 181,\n//   \"marginTop\": 56,\n//   \"marginRight\": 47,\n//   \"marginBottom\": 81,\n//   \"marginLeft\": 68\n// }\n\nconst combineChartDimensions = dimensions => {\n  const parsedDimensions = {\n      ...dimensions,\n      marginTop: dimensions.marginTop || 10,\n      marginRight: dimensions.marginRight || 10,\n      marginBottom: dimensions.marginBottom || 40,\n      marginLeft: dimensions.marginLeft || 75,\n  }\n\n  return {\n      ...parsedDimensions,\n      boundedHeight: Math.max(\n        parsedDimensions.height\n        - parsedDimensions.marginTop\n        - parsedDimensions.marginBottom,\n        0,\n      ),\n      boundedWidth: Math.max(\n        parsedDimensions.width\n        - parsedDimensions.marginLeft\n        - parsedDimensions.marginRight,\n        0,\n      ),\n  }\n}\n\nexport const useChartDimensions = passedSettings => {\n  const ref = useRef();\n  const dimensions = combineChartDimensions(passedSettings);\n  const [width, setWidth] = useState(0);\n  const [height, setHeight] = useState(0);\n\n  useEffect(() => {\n    if (dimensions.width && dimensions.height) return [ref, dimensions];\n    const element = ref.current;\n    const resizeObserver = new ResizeObserver(entries => {\n      if (!Array.isArray(entries)) return;\n      if (!entries.length) return;\n      const entry = entries[0];\n      if (width !== entry.contentRect.width) setWidth(entry.contentRect.width);\n      if (height !== entry.contentRect.height)\n        setHeight(entry.contentRect.height);\n    });\n    resizeObserver.observe(element);\n    return () => resizeObserver.unobserve(element);\n  }, []);\n\n  const newSettings = combineChartDimensions({\n    ...dimensions,\n    width: dimensions.width || width,\n    height: dimensions.height || height,\n  });\n\n  return [ref, newSettings];\n};\n","import React from 'react';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport Chip from '@material-ui/core/Chip';\nimport './SelectLocation.css';\nimport { ascending } from 'd3';\n\nconst LocationTag = ({ tag, color, onDelete }) => (\n  <Chip\n    className=\"location-tag\"\n    label={tag}\n    onDelete={e => onDelete(e, tag)}\n    style={{ backgroundColor: color, color: 'white' }}\n  />\n);\n\nexport const SelectLocation = ({\n  locations,\n  values,\n  colors,\n  colorScheme,\n  onChange,\n  onDelete,\n}) => {\n  return (\n    <Autocomplete\n      className=\"autocomplete\"\n      multiple\n      options={locations.sort(ascending)}\n      // getOptionLabel={option => option.title}\n      value={values}\n      onChange={onChange}\n      renderInput={params => (\n        <TextField {...params} variant=\"standard\" label=\"Select locations\" />\n      )}\n      renderTags={tag =>\n        tag.map((d, i) => (\n          <LocationTag\n            key={d}\n            tag={d}\n            color={colorScheme[colors[d] % colorScheme.length]}\n            onDelete={onDelete}\n          />\n        ))\n      }\n    />\n  );\n};\n","import React, { useMemo } from 'react';\nimport moment from 'moment';\nimport { format } from 'd3';\nimport './ChartToolTip.css';\n\nconst numberFormat = format(',');\n\n// Pcrovine/State: \"\"\n// Country/Region: \"Peru\"\n// Lat: -9.19\n// Long: -75.0152\n// date: Fri Mar 20 2020 00:00:00 GMT+1030 (Australian Central Daylight Time) {}\n// Confirmed: 234\n// Deaths: 3\n\nexport const ChartToolTip = ({ data, x, y, color, up }) => {\n  const text = useMemo(() => {\n    if (!data) return;\n    return {\n      date: moment(data['date']).format('Do MMM'),\n      country: data['Country/Region'],\n      confirmed: numberFormat(data['Confirmed']),\n      deaths: numberFormat(data['Deaths']),\n      recovered: numberFormat(data['Recovered'])\n    };\n  }, [data]);\n\n  return (\n    <div\n      className=\"wrapper\"\n      style={{\n        transform: `translate(${x}px,${up ? `calc(${y-10}px - 100%)` : `${y+30}px`})`,\n        backgroundColor: color,\n        opacity: text ? 0.85 : 0,\n      }}\n    >\n      <div className=\"chart-tooltip\">\n        { data && (\n          <>\n            <b>{text.country} - {text.date}</b><br/>\n            <span>Confirmed: {text.confirmed}</span><br/>\n            <span>Deaths: {text.deaths}</span><br/>\n            <span>Recovered: {text.recovered}</span>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst TextLabel = styled.label`\n  color: black;\n  font-size: 0.9rem;\n  font-weight: ${d => d.active ? 400 : 300};\n  // font-weight: ${d => d.active ? 500 : 400};\n  opacity: ${d => d.active ? 1 : 0.5};\n  margin-left: ${d => (d.right ? 0.25 : 0)}rem;\n  margin-right: ${d => (d.left ? 0.25 : 0)}rem;\n  transition: 0.2s;\n`;\n\nconst SwitchLabel = styled.label`\n  position: relative;\n  display: inline-block;\n  width: ${d => d.width}rem;\n  height: ${d => d.height}rem;\n\n  input {\n    opacity: 0;\n    width: 0;\n    height: 0;\n  }\n`;\n\nconst Slider = styled.span`\n  position: absolute;\n  cursor: pointer;\n  border-radius: 1rem;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: ${d => d.inactiveColor};\n  -webkit-transition: 0.2s;\n  transition: 0.2s;\n\n  &:before {\n    position: absolute;\n    content: '';\n    border-radius: 50%;\n    height: ${d => d.ballSize}rem;\n    width: ${d => d.ballSize}rem;\n    left: ${d => d.ballMargin}rem;\n    bottom: ${d => d.ballMargin}rem;\n    background-color: white;\n    -webkit-transition: 0.2s;\n    transition: 0.2s;\n  }\n\n  input:checked + & {\n    background-color: ${d => d.activeColor};\n  }\n\n  input:focus + & {\n    box-shadow: 0 0 1px ${d => d.activeColor};\n  }\n\n  input:checked + &:before {\n    -webkit-transform: translateX(${d => d.move}rem);\n    -ms-transform: translateX(${d => d.move}rem);\n    transform: translateX(${d => d.move}rem);\n  }\n`;\n\nexport const ToogleSwitch = ({\n  value,\n  preLabel,\n  label,\n  width = 3.5,\n  height = 1.5,\n  ballMargin = 0.2,\n  activeColor = '#007bff',\n  inactiveColor = '#ccc',\n  onChange = () => {},\n}) => {\n  const ballSize = height - ballMargin * 2;\n\n  return (\n    <div>\n      {preLabel && <TextLabel left active={!value}>{preLabel}</TextLabel>}\n      <SwitchLabel width={width} height={height}>\n        <input type=\"checkbox\" checked={value} onChange={onChange} />\n        <Slider\n          ballSize={ballSize}\n          move={width - ballSize - ballMargin * 2}\n          ballMargin={ballMargin}\n          activeColor={activeColor}\n          inactiveColor={inactiveColor}\n        />\n      </SwitchLabel>\n      {label && <TextLabel right active={value}>{label}</TextLabel>}\n    </div>\n  );\n};\n","import React, { useMemo, useState, useEffect, useCallback } from 'react';\nimport {\n  scaleTime,\n  extent,\n  max,\n  scaleLinear,\n  scaleLog,\n  schemeTableau10,\n} from 'd3';\nimport { Button, Col, Row } from 'react-bootstrap';\nimport { AnnotationCalloutCircle } from 'react-annotation';\nimport { AxisBottom } from './AxisBottom';\nimport { AxisLeft } from './AxisLeft';\nimport { Marks } from './Marks';\nimport { useChartDimensions } from './useChartDimensions';\nimport { SelectLocation } from './SelectLocation';\nimport { ChartToolTip } from './ChartToolTip';\nimport { ToogleSwitch } from './ToogleSwitch';\nimport './LineChart.css';\n\nexport const LineChart = ({\n  title,\n  data,\n  dimensions,\n  xAxis,\n  yAxis,\n  transitions,\n  defaultLocations,\n  onClose,\n}) => {\n  const [ref, dms] = useChartDimensions(dimensions);\n  const {\n    width,\n    height,\n    marginLeft,\n    marginTop,\n    marginBottom,\n    marginRight,\n    boundedHeight,\n    boundedWidth,\n  } = dms;\n\n  const [selection, setSelection] = useState(defaultLocations);\n  const [colors, setColors] = useState({});\n  const [toolTipData, setToolTipData] = useState();\n  const [switchXValue, setSwitchXValue] = useState(false);\n  const [switchXAxis, setSwitchXAxis] = useState(false);\n\n  const xValues = useCallback(\n    d =>\n      switchXAxis\n        ? switchXValue\n          ? d['idxDeaths']\n          : d['idxConfirmed']\n        : d['date'],\n    [switchXAxis, switchXValue]\n  );\n\n  const yValues = useCallback(\n    d => (switchXValue ? d['Deaths'] : d['Confirmed']),\n    [switchXValue]\n  );\n\n  const selectedData = useMemo(() => {\n    if (data)\n      return selection\n        .map(d => data[`$${d}`])\n        .map(d => d.filter(o => yValues(o) >= 1));\n  }, [data, selection, yValues]);\n\n  const xScale = useMemo(() => {\n    if (!selectedData) return;\n    const domain = extent(selectedData.map(d => d.map(xValues)).flat());\n    const scale = switchXAxis ? scaleLinear : scaleTime;\n    return scale()\n      .domain(domain)\n      .range([0, boundedWidth]);\n  }, [selectedData, xValues, boundedWidth, switchXAxis]);\n\n  const yScale = useMemo(() => {\n    if (!selectedData) return;\n    const domain = [0.1, max(selectedData.map(d => d.map(yValues)).flat())];\n    return scaleLog()\n      .domain(domain)\n      .range([boundedHeight, 0])\n      .nice();\n  }, [selectedData, yValues, boundedHeight]);\n\n  useEffect(() => {\n    if (!data) return;\n    setColors(current => {\n      const currentKeys = Object.keys(current);\n      if (currentKeys.length === 0) {\n        let newColors = {};\n        selection.forEach((d, i) => (newColors[d] = i));\n        return newColors;\n      }\n      const currentColors = Object.values(current);\n      let newColors = Object.assign({}, current);\n      // Adding locations\n      selection\n        .filter(d => !currentKeys.includes(d))\n        .forEach(d => {\n          let idx = 0;\n          while (currentColors.includes(idx)) {\n            idx++;\n          }\n          newColors[d] = idx;\n        });\n      // Removing a location\n      currentKeys\n        .filter(d => !selection.includes(d))\n        .forEach(d => {\n          delete newColors[d];\n        });\n      return newColors;\n    });\n  }, [data, selection]);\n\n  const annotations = useMemo(() => {\n    if (!selectedData) return;\n    let annotations = [];\n    selectedData.forEach(d =>\n      d\n        .filter(o => o['annotation'])\n        .forEach(o => {\n          annotations.push({\n            className: 'custom-annotation',\n            x: xScale(xValues(o)),\n            y: yScale(yValues(o)),\n            dx: 40,\n            dy: 20,\n            note: {\n              title: o['Country/Region'],\n              label: o['annotation'],\n              lineType: null,\n              align: 'middle',\n              wrap: 120,\n              orientation: 'leftRight'\n            },\n            subject: {radius: 10, radiusPadding: 0}\n          });\n        })\n    );\n\n    return annotations;\n  }, [selectedData, xScale, xValues, yScale, yValues]);\n\n  const marks = useMemo(() => {\n    if (selectedData)\n      return (\n        <>\n          {selectedData.map((d, i) => {\n            if (d.length === 0) return;\n            const location = d[0]['Country/Region'];\n            const color =\n              schemeTableau10[colors[location] % schemeTableau10.length];\n\n            return (\n              <Marks\n                key={location}\n                data={d}\n                xScale={xScale}\n                yScale={yScale}\n                xValue={xValues}\n                yValue={yValues}\n                transition={transitions.lines}\n                color={color}\n                setToolTipData={setToolTipData}\n                marginRight={marginRight}\n                marginLeft={marginLeft}\n                boundedWidth={boundedWidth}\n                boundedHeight={boundedHeight}\n              />\n            );\n          })}\n        </>\n      );\n  }, [\n    boundedWidth,\n    boundedHeight,\n    colors,\n    marginLeft,\n    marginRight,\n    selectedData,\n    transitions.lines,\n    xScale,\n    xValues,\n    yScale,\n    yValues,\n  ]);\n\n  return (\n    <div className=\"chart\">\n      <Row className=\"chart-selector justify-content-center\">\n        <Col className=\"select-location\">\n          <SelectLocation\n            locations={data ? data.keys() : defaultLocations}\n            values={selection}\n            colors={colors}\n            colorScheme={schemeTableau10}\n            onChange={(e, d) => setSelection(d)}\n            onDelete={(e, d) =>\n              setSelection(current => {\n                const idx = current.indexOf(d);\n                const newSelection = current.slice();\n                newSelection.splice(idx, 1);\n                return newSelection;\n              })\n            }\n          />\n        </Col>\n        <Col className=\"close-wrapper\">\n          <Button\n            variant=\"outline-danger close-button\"\n            size=\"sm\"\n            onClick={onClose}\n          >\n            <span>x</span>\n          </Button>\n        </Col>\n      </Row>\n      <Row className=\"justify-content-between\">\n        <Col className=\"chart-options\" sm={12} md={6}>\n          <label className=\"chart-option-label\">Show value:</label>\n          <ToogleSwitch\n            value={switchXValue}\n            preLabel=\"Confirmed\"\n            label=\"Deaths\"\n            width={2.75}\n            height={1.3}\n            activeColor=\"#7a9abe\"\n            inactiveColor=\"#7a9abe\"\n            onChange={() => setSwitchXValue(d => !d)}\n          />\n        </Col>\n        <Col className=\"chart-options\" sm={12} md={6}>\n          <label className=\"chart-option-label\">x Axis:</label>\n          <ToogleSwitch\n            value={switchXAxis}\n            preLabel=\"Date\"\n            label=\"Days since\"\n            width={2.75}\n            height={1.3}\n            activeColor=\"#7a9abe\"\n            inactiveColor=\"#7a9abe\"\n            onChange={() => setSwitchXAxis(d => !d)}\n          />\n        </Col>\n      </Row>\n      <Row className=\"chart-container\" ref={ref}>\n        <Col>\n          <ChartToolTip {...toolTipData} />\n          <svg width={width} height={height}>\n            <g transform={`translate(${marginLeft},${marginTop})`}>\n              {title && (\n                <text\n                  className=\"title\"\n                  x={boundedWidth / 2 + title.dx}\n                  y={title.dy}\n                  textAnchor=\"middle\"\n                >\n                  {title.label}\n                </text>\n              )}\n              {selectedData ? (\n                <>\n                  <AxisBottom\n                    xScale={xScale}\n                    boundedHeight={boundedHeight}\n                    boundedWidth={boundedWidth}\n                    date={!switchXAxis}\n                    {...xAxis}\n                  />\n                  <AxisLeft\n                    yScale={yScale}\n                    boundedHeight={boundedHeight}\n                    boundedWidth={boundedWidth}\n                    {...yAxis}\n                  />\n                  {annotations.map((props, i) => (\n                    <AnnotationCalloutCircle key={i} {...props} />\n                  ))}\n                  {marks}\n                </>\n              ) : (\n                <text>Loading...</text>\n              )}\n            </g>\n          </svg>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport { useData } from './useData';\nimport { LineChart } from './LineChart';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\n\nconst chartConfig = {\n  // title: {\n  //   label: 'Testing',\n  //   dx: 0,\n  //   dy: -20,\n  // },\n  dimensions: {\n    marginTop: 10,\n    marginRight: 35,\n    marginBottom: 30,\n    marginLeft: 75,\n  },\n  xAxis: {\n    tickSize: 6,\n    tickOffset: 15,\n    tickWidth: 45,\n    tickWidthDate: 130,\n  },\n  yAxis: {\n    label: 'Cases',\n    labelOffset: 50,\n    tickSize: 6,\n    tickOffset: 10,\n    tickHeight: 100,\n  },\n  transitions: {\n    lines: 500,\n  },\n  defaultLocations: ['Peru', 'Australia', 'Iran', 'Italy'],\n};\n\nfunction App() {\n  const data = useData();\n  const [charts, setCharts] = useState([0]);\n\n  return (\n    <Container className=\"app-container\">\n      <header>\n        <h1 className=\"mt-4 mb-4\">Covid 2019</h1>\n      </header>\n\n      <main className=\"app-main\">\n        <Row>\n          <Col>\n            <p>\n              Plots of coronavirus data (\n              <a\n                href=\"https://github.com/CSSEGISandData/COVID-19/tree/master/csse_covid_19_data\"\n                target=\"_black\"\n              >\n                source\n              </a>\n              ).\n            </p>\n          </Col>\n        </Row>\n\n        <Row>\n          {charts.map(i => (\n            <Col key={i} md={12} xl={charts.length > 1 ? 6 : 12}>\n              <LineChart\n                data={data}\n                onClose={() =>\n                  setCharts(d => {\n                    const idx = d.indexOf(i);\n                    const out = d.slice();\n                    out.splice(idx, 1);\n                    return out;\n                  })\n                }\n                {...chartConfig}\n              />\n            </Col>\n          ))}\n        </Row>\n        <Row className=\"mt-2\">\n          <Col className=\"text-right\">\n            <Button\n              onClick={() =>\n                setCharts(d => {\n                  const idx = d.length === 0 ? 0 : d[d.length - 1] + 1;\n                  return d.concat(idx);\n                })\n              }\n            >\n              Add Chart\n            </Button>\n          </Col>\n        </Row>\n      </main>\n\n      <footer>\n        <Row>\n          <Col className=\"mt-4 text-right\">\n            <a href=\"https://github.com/renato145/covid2019\" target=\"_black\">\n              Source code\n            </a>\n          </Col>\n        </Row>\n      </footer>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}