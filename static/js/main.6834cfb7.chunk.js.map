{"version":3,"sources":["useData.js","AxisBottom.js","AxisLeft.js","Marks.js","utils.js","useChartDimensions.js","SelectLocation.js","ChartToolTip.js","ToogleSwitch.js","LineChart.js","App.js","index.js"],"names":["URLS","ID_COLS","useData","useState","data","setData","useEffect","Promise","all","map","d","csv","then","sourceData","i","nest","key","name","newData","forEach","row","Object","keys","filter","col","includes","newRow","push","meltData","locations","combinedData","loc","allData","dd","values","val","groupValues","reduce","acc","Date","formatedData","sortValues","a","b","date","AxisBottom","xScale","boundedHeight","boundedWidth","label","labelOffset","tickSize","tickOffset","tickWidth","range","useMemo","tickCount","className","join","fill","ticks","tickValue","transform","y1","y2","style","textAnchor","dy","y","moment","format","x","formatNumbers","AxisLeft","yScale","tickHeight","logFormat","tickFormat","x2","Dot","transition","onPointerEnter","onPointerLeave","useSpring","config","duration","easing","easeCubic","cx","cy","setStyle","circle","Marks","xValue","yValue","color","setToolTipData","marginRight","marginLeft","path","useRef","select","current","attrTween","prev","this","attr","line","interpolatePath","ref","stroke","value","min","max","up","combineChartDimensions","dimensions","parsedDimensions","marginTop","marginBottom","Math","height","width","LocationTag","tag","onDelete","Chip","e","backgroundColor","SelectLocation","colors","colorScheme","onChange","Autocomplete","multiple","options","sort","ascending","renderInput","params","TextField","variant","renderTags","length","numberFormat","ChartToolTip","text","country","confirmed","deaths","opacity","TextLabel","styled","active","right","left","SwitchLabel","Slider","span","inactiveColor","ballSize","ballMargin","activeColor","move","ToogleSwitch","preLabel","type","checked","LineChart","title","xAxis","yAxis","xValues","transitions","defaultLocations","onClose","passedSettings","setWidth","setHeight","element","resizeObserver","ResizeObserver","entries","Array","isArray","entry","contentRect","observe","unobserve","newSettings","useChartDimensions","dms","selection","setSelection","setColors","toolTipData","switchValue","setSwitchValue","yValues","useCallback","selectedData","o","domain","extent","flat","scaleTime","scaleLog","nice","currentKeys","newColors","currentColors","assign","idx","marks","location","schemeTableau10","lines","Row","Col","indexOf","newSelection","slice","splice","Button","size","onClick","sm","md","dx","chartConfig","App","charts","setCharts","Container","href","target","xl","out","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6834cfb7.chunk.js","sourcesContent":["import { csv, nest } from 'd3';\nimport { useState, useEffect } from 'react';\n\nconst URLS = [\n  [\n    'Confirmed',\n    'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv',\n  ],\n  [\n    'Deaths',\n    'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv',\n  ],\n  // [\n  //   'Recovered',\n  //   'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Recovered.csv',\n  // ],\n];\nconst ID_COLS = ['Province/State', 'Country/Region', 'Lat', 'Long'];\n\nconst meltData = (data, name) => {\n  let newData = [];\n  data.forEach(row => {\n    Object.keys(row)\n      .filter(col => !ID_COLS.includes(col))\n      .forEach(col => {\n        if (row[col] === '') return;\n        let newRow = {};\n        ID_COLS.forEach(d => (newRow[d] = row[d]));\n        newRow['date'] = col;\n        newRow[name] = +row[col];\n        newData.push(newRow);\n      });\n  });\n  return newData;\n};\n\nexport const useData = () => {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    Promise.all(URLS.map(d => csv(d[1]))).then(sourceData => {\n      const data = sourceData.map((d, i) =>\n        nest()\n          .key(d => d['Country/Region'])\n          .key(d => d['date'])\n          .map(meltData(d, URLS[i][0]))\n      );\n      const locations = data[0].keys();\n      let combinedData = [];\n      locations.forEach(loc => {\n        const allData = data.map(d => d[`$${loc}`]).filter(d => d);\n        const dates = allData[0].keys();\n        dates.forEach(dd => {\n          const values = allData.map(d => d[`$${dd}`]);\n          let newData = {};\n          ID_COLS.forEach(d => {\n            const val = values[0][0][d];\n            newData[d] = ['Lat', 'Long'].includes(d) ? +val : val;\n          });\n          values.forEach((groupValues, i) => {\n            if (!groupValues) return;\n            const name = URLS[i][0];\n            newData[name] = groupValues\n              .map(val => val[name])\n              .reduce((acc, val) => val + acc);\n          });\n          if (newData['Confirmed'] > 0) {\n            newData['date'] = new Date(dd);\n            combinedData.push(newData);\n          }\n        });\n      });\n      const formatedData = nest()\n        .key(d => d['Country/Region'])\n        .sortValues((a, b) => a.date - b.date)\n        .map(combinedData);\n      setData(formatedData);\n    });\n  }, []);\n\n  return data;\n};\n","import React, { useMemo } from 'react';\nimport moment from 'moment';\nimport './Axis.css';\n\nexport const AxisBottom = ({\n  xScale,\n  boundedHeight,\n  boundedWidth,\n  label,\n  labelOffset,\n  tickSize,\n  tickOffset,\n  tickWidth,\n}) => {\n  const range = useMemo(() => xScale.range(), [xScale]);\n  const tickCount = useMemo(() => boundedWidth / tickWidth, [\n    boundedWidth,\n    tickWidth,\n  ]);\n\n  return (\n    <>\n      <path\n        className=\"line\"\n        d={['M', range[0], boundedHeight, 'H', range[1]].join(' ')}\n        // in case of not nice() scale\n        // d={['M', range[0], boundedHeight+6, 'v', -6, 'H', range[1], 'v', 6].join(' ')}\n        fill=\"none\"\n      />\n      {xScale.ticks(tickCount).map((tickValue, i) => (\n        <g\n          className=\"tick\"\n          key={i}\n          transform={`translate(${xScale(tickValue)},0)`}\n        >\n          <line y1={boundedHeight} y2={boundedHeight + tickSize} />\n          {/* <line y1={boundedHeight - tickSize} y2={boundedHeight} /> */}\n          <text\n            style={{ textAnchor: 'middle' }}\n            dy=\".71em\"\n            y={boundedHeight + tickOffset}\n          >\n            {moment(tickValue).format('Do MMM')}\n          </text>\n        </g>\n      ))}\n      {label && (\n        <text\n          className=\"label\"\n          x={boundedWidth / 2}\n          y={boundedHeight + labelOffset}\n          textAnchor=\"middle\"\n        >\n          {label}\n        </text>\n      )}\n    </>\n  );\n};\n","import React, { useMemo } from 'react';\nimport { format } from 'd3';\nimport './Axis.css';\n\nconst formatNumbers = format('.0s');\n\nexport const AxisLeft = ({\n  yScale,\n  boundedHeight,\n  boundedWidth,\n  label,\n  labelOffset,\n  tickSize,\n  tickOffset,\n  tickHeight,\n}) => {\n  const range = useMemo(() => yScale.range(), [yScale]);\n  const tickCount = useMemo(() => boundedHeight / tickHeight, [\n    boundedHeight,\n    tickHeight,\n  ]);\n  const logFormat = yScale.tickFormat(tickCount, '');\n\n  return (\n    <>\n      <path\n        className=\"line\"\n        d={['M', 0, range[1], 'v', range[0]].join(' ')}\n        fill=\"none\"\n      />\n      {yScale\n        .ticks(tickCount)\n        .filter(d => d >= 1)\n        .map(logFormat)\n        .filter(d => d !== '')\n        .map((tickValue, i) => (\n          <g\n            key={i}\n            className=\"tick\"\n            transform={`translate(0,${yScale(tickValue)})`}\n          >\n            <line x2={-tickSize} />\n            <text\n              key={tickValue}\n              style={{ textAnchor: 'end' }}\n              x={-tickOffset}\n              dy=\".32em\"\n            >\n              {formatNumbers(tickValue)}\n            </text>\n          </g>\n        ))}\n      {label && (\n        <text\n          className=\"label\"\n          textAnchor=\"middle\"\n          transform={`translate(${-labelOffset},${boundedHeight /\n            2}) rotate(-90)`}\n        >\n          {label}\n        </text>\n      )}\n    </>\n  );\n};\n","import React, { useEffect, useRef } from 'react';\nimport { select, line, easeCubic } from 'd3';\nimport { interpolatePath } from 'd3-interpolate-path';\nimport { useSpring, animated } from 'react-spring';\nimport { clamp } from './utils';\nimport './Marks.css';\n\nconst Dot = ({ x, y, fill, transition, onPointerEnter, onPointerLeave }) => {\n  const [style, setStyle] = useSpring(() => ({\n    config: { duration: transition, easing: easeCubic },\n    cx: x,\n    cy: y,\n    fill: fill ? fill : '#efefef',\n  }));\n\n  useEffect(() => {\n    setStyle({\n      cx: x,\n      cy: y,\n      fill: fill ? fill : '#efefef',\n    });\n  }, [setStyle, x, y, fill]);\n\n  return (\n    <animated.circle\n      {...style}\n      onPointerEnter={onPointerEnter}\n      onPointerLeave={onPointerLeave}\n    />\n  );\n};\n\nexport const Marks = ({\n  data,\n  xScale,\n  yScale,\n  xValue,\n  yValue,\n  transition,\n  color,\n  setToolTipData,\n  marginRight,\n  marginLeft,\n  boundedWidth,\n  boundedHeight,\n}) => {\n  const path = useRef(null);\n\n  useEffect(() => {\n    select(path.current)\n      .transition()\n      .duration(transition)\n      .attrTween('d', function() {\n        const prev = select(this).attr('d');\n        const current = line()\n          .x(d => xScale(xValue(d)))\n          .y(d => yScale(yValue(d)))(data);\n        return interpolatePath(prev, current);\n      });\n  }, [data, xScale, yScale, xValue, yValue, transition]);\n\n  return (\n    <g className=\"marks\">\n      <path ref={path} stroke={color} />\n      {data.map((d, i) => {\n        const x = xScale(xValue(d));\n        const y = yScale(yValue(d));\n        return (\n          <Dot\n            key={i}\n            x={x}\n            y={y}\n            fill={color}\n            transition={transition}\n            onPointerEnter={() =>\n              setToolTipData({\n                data: d,\n                x: clamp(x, marginLeft, boundedWidth - marginRight - 25),\n                y,\n                up: y > boundedHeight / 2,\n                color,\n              })\n            }\n            onPointerLeave={() => setToolTipData('')}\n          />\n        );\n      })}\n    </g>\n  );\n};\n","export const clamp = (value, min, max) =>\n  value >= max ? max : value <= min ? min : value;\n","// from: https://wattenberger.com/blog/react-and-d3\n// npm i @juggle/resize-observer\nimport { ResizeObserver } from '@juggle/resize-observer';\nimport { useRef, useEffect, useState } from 'react';\n\n// possible chart settings:\n// const dimensions = {\n//   \"width\": 363,\n//   \"height\": 181,\n//   \"marginTop\": 56,\n//   \"marginRight\": 47,\n//   \"marginBottom\": 81,\n//   \"marginLeft\": 68\n// }\n\nconst combineChartDimensions = dimensions => {\n  const parsedDimensions = {\n      ...dimensions,\n      marginTop: dimensions.marginTop || 10,\n      marginRight: dimensions.marginRight || 10,\n      marginBottom: dimensions.marginBottom || 40,\n      marginLeft: dimensions.marginLeft || 75,\n  }\n\n  return {\n      ...parsedDimensions,\n      boundedHeight: Math.max(\n        parsedDimensions.height\n        - parsedDimensions.marginTop\n        - parsedDimensions.marginBottom,\n        0,\n      ),\n      boundedWidth: Math.max(\n        parsedDimensions.width\n        - parsedDimensions.marginLeft\n        - parsedDimensions.marginRight,\n        0,\n      ),\n  }\n}\n\nexport const useChartDimensions = passedSettings => {\n  const ref = useRef();\n  const dimensions = combineChartDimensions(passedSettings);\n  const [width, setWidth] = useState(0);\n  const [height, setHeight] = useState(0);\n\n  useEffect(() => {\n    if (dimensions.width && dimensions.height) return [ref, dimensions];\n    const element = ref.current;\n    const resizeObserver = new ResizeObserver(entries => {\n      if (!Array.isArray(entries)) return;\n      if (!entries.length) return;\n      const entry = entries[0];\n      if (width !== entry.contentRect.width) setWidth(entry.contentRect.width);\n      if (height !== entry.contentRect.height)\n        setHeight(entry.contentRect.height);\n    });\n    resizeObserver.observe(element);\n    return () => resizeObserver.unobserve(element);\n  }, []);\n\n  const newSettings = combineChartDimensions({\n    ...dimensions,\n    width: dimensions.width || width,\n    height: dimensions.height || height,\n  });\n\n  return [ref, newSettings];\n};\n","import React from 'react';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport Chip from '@material-ui/core/Chip';\nimport './SelectLocation.css';\nimport { ascending } from 'd3';\n\nconst LocationTag = ({ tag, color, onDelete }) => (\n  <Chip\n    className=\"location-tag\"\n    label={tag}\n    onDelete={e => onDelete(e, tag)}\n    style={{ backgroundColor: color, color: 'white' }}\n  />\n);\n\nexport const SelectLocation = ({\n  locations,\n  values,\n  colors,\n  colorScheme,\n  onChange,\n  onDelete,\n}) => {\n  return (\n    <Autocomplete\n      className=\"autocomplete\"\n      multiple\n      options={locations.sort(ascending)}\n      // getOptionLabel={option => option.title}\n      value={values}\n      onChange={onChange}\n      renderInput={params => (\n        <TextField {...params} variant=\"standard\" label=\"Select locations\" />\n      )}\n      renderTags={tag =>\n        tag.map((d, i) => (\n          <LocationTag\n            key={d}\n            tag={d}\n            color={colorScheme[colors[d] % colorScheme.length]}\n            onDelete={onDelete}\n          />\n        ))\n      }\n    />\n  );\n};\n","import React, { useMemo } from 'react';\nimport moment from 'moment';\nimport { format } from 'd3';\nimport './ChartToolTip.css';\n\nconst numberFormat = format(',');\n\n// Pcrovine/State: \"\"\n// Country/Region: \"Peru\"\n// Lat: -9.19\n// Long: -75.0152\n// date: Fri Mar 20 2020 00:00:00 GMT+1030 (Australian Central Daylight Time) {}\n// Confirmed: 234\n// Deaths: 3\n\nexport const ChartToolTip = ({ data, x, y, color, up }) => {\n  const text = useMemo(() => {\n    if (!data) return;\n    return {\n      date: moment(data['date']).format('Do MMM'),\n      country: data['Country/Region'],\n      confirmed: numberFormat(data['Confirmed']),\n      deaths: numberFormat(data['Deaths']),\n    };\n  }, [data]);\n\n  return (\n    <div\n      className=\"wrapper\"\n      style={{\n        transform: `translate(${x}px,${up ? `calc(${y-10}px - 100%)` : `${y+30}px`})`,\n        backgroundColor: color,\n        opacity: text ? 0.85 : 0,\n      }}\n    >\n      <div className=\"chart-tooltip\">\n        { data && (\n          <>\n            <b>{text.country} - {text.date}</b><br/>\n            <span>Confirmed: {text.confirmed}</span><br/>\n            <span>Deaths: {text.deaths}</span>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst TextLabel = styled.label`\n  color: black;\n  font-size: 0.9rem;\n  font-weight: ${d => d.active ? 400 : 300};\n  // font-weight: ${d => d.active ? 500 : 400};\n  opacity: ${d => d.active ? 1 : 0.5};\n  margin-left: ${d => (d.right ? 0.25 : 0)}rem;\n  margin-right: ${d => (d.left ? 0.25 : 0)}rem;\n  transition: 0.2s;\n`;\n\nconst SwitchLabel = styled.label`\n  position: relative;\n  display: inline-block;\n  width: ${d => d.width}rem;\n  height: ${d => d.height}rem;\n\n  input {\n    opacity: 0;\n    width: 0;\n    height: 0;\n  }\n`;\n\nconst Slider = styled.span`\n  position: absolute;\n  cursor: pointer;\n  border-radius: 1rem;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: ${d => d.inactiveColor};\n  -webkit-transition: 0.2s;\n  transition: 0.2s;\n\n  &:before {\n    position: absolute;\n    content: '';\n    border-radius: 50%;\n    height: ${d => d.ballSize}rem;\n    width: ${d => d.ballSize}rem;\n    left: ${d => d.ballMargin}rem;\n    bottom: ${d => d.ballMargin}rem;\n    background-color: white;\n    -webkit-transition: 0.2s;\n    transition: 0.2s;\n  }\n\n  input:checked + & {\n    background-color: ${d => d.activeColor};\n  }\n\n  input:focus + & {\n    box-shadow: 0 0 1px ${d => d.activeColor};\n  }\n\n  input:checked + &:before {\n    -webkit-transform: translateX(${d => d.move}rem);\n    -ms-transform: translateX(${d => d.move}rem);\n    transform: translateX(${d => d.move}rem);\n  }\n`;\n\nexport const ToogleSwitch = ({\n  value,\n  preLabel,\n  label,\n  width = 3.5,\n  height = 1.5,\n  ballMargin = 0.2,\n  activeColor = '#007bff',\n  inactiveColor = '#ccc',\n  onChange = () => {},\n}) => {\n  const ballSize = height - ballMargin * 2;\n\n  return (\n    <div>\n      {preLabel && <TextLabel left active={!value}>{preLabel}</TextLabel>}\n      <SwitchLabel width={width} height={height}>\n        <input type=\"checkbox\" checked={value} onChange={onChange} />\n        <Slider\n          ballSize={ballSize}\n          move={width - ballSize - ballMargin * 2}\n          ballMargin={ballMargin}\n          activeColor={activeColor}\n          inactiveColor={inactiveColor}\n        />\n      </SwitchLabel>\n      {label && <TextLabel right active={value}>{label}</TextLabel>}\n    </div>\n  );\n};\n","import React, { useMemo, useState, useEffect, useCallback } from 'react';\nimport { scaleTime, extent, max, scaleLog, schemeTableau10 } from 'd3';\nimport { AxisBottom } from './AxisBottom';\nimport { AxisLeft } from './AxisLeft';\nimport { Marks } from './Marks';\nimport { useChartDimensions } from './useChartDimensions';\nimport { SelectLocation } from './SelectLocation';\nimport { ChartToolTip } from './ChartToolTip';\nimport { ToogleSwitch } from './ToogleSwitch';\nimport { Button, Col, Row } from 'react-bootstrap';\nimport './LineChart.css';\n\nexport const LineChart = ({\n  title,\n  data,\n  dimensions,\n  xAxis,\n  yAxis,\n  xValues,\n  transitions,\n  defaultLocations,\n  onClose,\n}) => {\n  const [ref, dms] = useChartDimensions(dimensions);\n  const {\n    width,\n    height,\n    marginLeft,\n    marginTop,\n    marginBottom,\n    marginRight,\n    boundedHeight,\n    boundedWidth,\n  } = dms;\n\n  const [selection, setSelection] = useState(defaultLocations);\n  const [colors, setColors] = useState({});\n  const [toolTipData, setToolTipData] = useState();\n  const [switchValue, setSwitchValue] = useState(false);\n\n  const yValues = useCallback(\n    d => (switchValue ? d['Deaths'] : d['Confirmed']),\n    [switchValue]\n  );\n\n  const selectedData = useMemo(() => {\n    if (data)\n      return selection\n        .map(d => data[`$${d}`])\n        .map(d => d.filter(o => yValues(o) >= 1));\n  }, [data, selection, yValues]);\n\n  const xScale = useMemo(() => {\n    if (!selectedData) return;\n    const domain = extent(selectedData.map(d => d.map(xValues)).flat());\n    return scaleTime()\n      .domain(domain)\n      .range([0, boundedWidth]);\n  }, [selectedData, xValues, boundedWidth]);\n\n  const yScale = useMemo(() => {\n    if (!selectedData) return;\n    const domain = [0.1, max(selectedData.map(d => d.map(yValues)).flat())];\n    return scaleLog()\n      .domain(domain)\n      .range([boundedHeight, 0])\n      .nice();\n  }, [selectedData, yValues, boundedHeight]);\n\n  useEffect(() => {\n    if (!data) return;\n    setColors(current => {\n      const currentKeys = Object.keys(current);\n      if (currentKeys.length === 0) {\n        let newColors = {};\n        selection.forEach((d, i) => (newColors[d] = i));\n        return newColors;\n      }\n      const currentColors = Object.values(current);\n      let newColors = Object.assign({}, current);\n      // Adding locations\n      selection\n        .filter(d => !currentKeys.includes(d))\n        .forEach(d => {\n          let idx = 0;\n          while (currentColors.includes(idx)) {\n            idx++;\n          }\n          newColors[d] = idx;\n        });\n      // Removing a location\n      currentKeys\n        .filter(d => !selection.includes(d))\n        .forEach(d => {\n          delete newColors[d];\n        });\n      return newColors;\n    });\n  }, [data, selection]);\n\n  const marks = useMemo(() => {\n    if (selectedData)\n      return (\n        <>\n          {selectedData.map((d, i) => {\n            const location = d[0]['Country/Region'];\n            const color =\n              schemeTableau10[colors[location] % schemeTableau10.length];\n\n            return (\n              <Marks\n                key={location}\n                data={d}\n                xScale={xScale}\n                yScale={yScale}\n                xValue={xValues}\n                yValue={yValues}\n                transition={transitions.lines}\n                color={color}\n                setToolTipData={setToolTipData}\n                marginRight={marginRight}\n                marginLeft={marginLeft}\n                boundedWidth={boundedWidth}\n                boundedHeight={boundedHeight}\n              />\n            );\n          })}\n        </>\n      );\n  }, [\n    boundedWidth,\n    boundedHeight,\n    colors,\n    marginLeft,\n    marginRight,\n    selectedData,\n    transitions.lines,\n    xScale,\n    xValues,\n    yScale,\n    yValues,\n  ]);\n\n  return (\n    <div className=\"chart\">\n      <Row className=\"chart-selector justify-content-center\">\n        <Col className=\"select-location\">\n          <SelectLocation\n            locations={data ? data.keys() : defaultLocations}\n            values={selection}\n            colors={colors}\n            colorScheme={schemeTableau10}\n            onChange={(e, d) => setSelection(d)}\n            onDelete={(e, d) =>\n              setSelection(current => {\n                const idx = current.indexOf(d);\n                const newSelection = current.slice();\n                newSelection.splice(idx, 1);\n                return newSelection;\n              })\n            }\n          />\n        </Col>\n        <Col className=\"close-wrapper\">\n          <Button\n            variant=\"outline-danger close-button\"\n            size=\"sm\"\n            onClick={onClose}\n          >\n            <span>x</span>\n          </Button>\n        </Col>\n      </Row>\n      <Row className=\"justify-content-between\" >\n        <Col className=\"chart-options\" sm={12} md={4}>\n          <label className=\"chart-option-label\">Show value:</label>\n          <ToogleSwitch\n            value={switchValue}\n            preLabel=\"Confirmed\"\n            label=\"Deaths\"\n            width={2.75}\n            height={1.3}\n            activeColor=\"#7a9abe\"\n            inactiveColor=\"#7a9abe\"\n            onChange={() => setSwitchValue(d => !d)}\n          />\n        </Col>\n        {/* <Col className=\"chart-options\" sm={12} md={4}>\n          <label className=\"chart-option-label\">x Axis:</label>\n          <ToogleSwitch\n            value={switchValue}\n            preLabel=\"Date\"\n            label=\"Days since\"\n            width={2.75}\n            height={1.3}\n            activeColor=\"#7a9abe\"\n            inactiveColor=\"#7a9abe\"\n            // onChange={() => setSwitchValue(d => !d)}\n          />\n        </Col> */}\n      </Row>\n      <Row className=\"chart-container\" ref={ref}>\n        <Col>\n          <ChartToolTip {...toolTipData} />\n          <svg width={width} height={height}>\n            <g transform={`translate(${marginLeft},${marginTop})`}>\n              {title && (\n                <text\n                  className=\"title\"\n                  x={boundedWidth / 2 + title.dx}\n                  y={title.dy}\n                  textAnchor=\"middle\"\n                >\n                  {title.label}\n                </text>\n              )}\n              {selectedData ? (\n                <>\n                  <AxisBottom\n                    xScale={xScale}\n                    boundedHeight={boundedHeight}\n                    boundedWidth={boundedWidth}\n                    {...xAxis}\n                  />\n                  <AxisLeft\n                    yScale={yScale}\n                    boundedHeight={boundedHeight}\n                    boundedWidth={boundedWidth}\n                    {...yAxis}\n                  />\n                  {marks}\n                </>\n              ) : (\n                <text>Loading...</text>\n              )}\n            </g>\n          </svg>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport { useData } from './useData';\nimport { LineChart } from './LineChart';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\n\nconst chartConfig = {\n  // title: {\n  //   label: 'Testing',\n  //   dx: 0,\n  //   dy: -20,\n  // },\n  dimensions: {\n    marginTop: 10,\n    marginRight: 35,\n    marginBottom: 30,\n    marginLeft: 75,\n  },\n  xAxis: {\n    tickSize: 6,\n    tickOffset: 15,\n    tickWidth: 130,\n  },\n  yAxis: {\n    label: 'Cases',\n    labelOffset: 50,\n    tickSize: 6,\n    tickOffset: 10,\n    tickHeight: 100,\n  },\n  xValues: d => d.date,\n  transitions: {\n    lines: 500,\n  },\n  defaultLocations: ['Peru', 'Australia', 'Iran', 'Italy'],\n};\n\nfunction App() {\n  const data = useData();\n  const [charts, setCharts] = useState([0]);\n\n  return (\n    <Container className=\"app-container\">\n      <header>\n        <h1 className=\"mt-4 mb-4\">Covid 2019</h1>\n      </header>\n\n      <main className=\"app-main\">\n        <Row>\n          <Col>\n            <p>\n              Plots of coronavirus data (\n              <a\n                href=\"https://github.com/CSSEGISandData/COVID-19/tree/master/csse_covid_19_data\"\n                target=\"_black\"\n              >\n                source\n              </a>\n              ).\n            </p>\n          </Col>\n        </Row>\n\n        <Row>\n          {charts.map(i => (\n            <Col key={i} md={12} xl={charts.length > 1 ? 6 : 12}>\n              <LineChart\n                data={data}\n                onClose={() =>\n                  setCharts(d => {\n                    const idx = d.indexOf(i);\n                    const out = d.slice();\n                    out.splice(idx, 1);\n                    return out;\n                  })\n                }\n                {...chartConfig}\n              />\n            </Col>\n          ))}\n        </Row>\n        <Row className=\"mt-2\">\n          <Col className=\"text-right\">\n            <Button\n              onClick={() =>\n                setCharts(d => {\n                  const idx = d.length === 0 ? 0 : d[d.length - 1] + 1;\n                  return d.concat(idx);\n                })\n              }\n            >\n              Add Chart\n            </Button>\n          </Col>\n        </Row>\n      </main>\n\n      <footer>\n        <Row>\n          <Col className=\"mt-4 text-right\">\n            <a href=\"https://github.com/renato145/covid2019\" target=\"_black\">\n              Source code\n            </a>\n          </Col>\n        </Row>\n      </footer>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}