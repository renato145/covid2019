{"version":3,"sources":["useData.js","AxisBottom.js","AxisLeft.js","Marks.js","useChartDimensions.js","SelectLocation.js","LineChart.js","App.js","index.js"],"names":["URLS","ID_COLS","useData","useState","data","setData","useEffect","Promise","all","map","d","csv","then","sourceData","i","nest","key","name","newData","forEach","row","Object","keys","filter","col","includes","newRow","push","meltData","locations","combinedData","loc","allData","dd","values","val","Date","formatedData","sortValues","a","b","date","AxisBottom","xScale","boundedHeight","boundedWidth","label","labelOffset","tickSize","tickOffset","tickWidth","range","useMemo","tickCount","className","join","fill","ticks","tickValue","transform","y1","y2","style","textAnchor","dy","y","moment","format","x","formatNumbers","AxisLeft","yScale","tickHeight","logFormat","tickFormat","x2","Dot","transition","ref","useRef","useSpring","config","duration","easing","easeCubic","cx","cy","circle","Marks","xValue","yValue","color","path","select","current","attrTween","prev","this","attr","line","interpolatePath","stroke","combineChartDimensions","dimensions","parsedDimensions","marginTop","marginRight","marginBottom","marginLeft","Math","max","height","width","SelectLocation","defaultLocation","onChange","Autocomplete","multiple","options","sort","ascending","defaultValue","renderInput","params","TextField","variant","LineChart","title","xAxis","yAxis","xValues","yValues","transitions","defaultLocations","onClose","passedSettings","setWidth","setHeight","element","resizeObserver","ResizeObserver","entries","Array","isArray","length","entry","contentRect","observe","unobserve","newSettings","useChartDimensions","dms","selection","setSelection","selectedData","domain","extent","flat","scaleTime","nice","scaleLog","Row","Col","md","e","Button","size","onClick","dx","lines","schemeTableau10","chartConfig","Confirmed","App","charts","setCharts","Container","href","target","xl","idx","indexOf","out","slice","splice","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.314865fd.chunk.js","sourcesContent":["import { csv, nest } from 'd3';\nimport { useState, useEffect } from 'react';\n\nconst URLS = [\n  [\n    'Confirmed',\n    'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv',\n  ],\n  [\n    'Deaths',\n    'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Deaths.csv',\n  ],\n  [\n    'Recovered',\n    'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Recovered.csv',\n  ],\n];\nconst ID_COLS = ['Province/State', 'Country/Region', 'Lat', 'Long'];\n\nconst meltData = (data, name) => {\n  let newData = [];\n  data.forEach(row => {\n    Object.keys(row)\n      .filter(col => !ID_COLS.includes(col))\n      .forEach(col => {\n        let newRow = {};\n        ID_COLS.forEach(d => newRow[d] = row[d]);\n        newRow['date'] = col;\n        newRow[name] = +row[col];\n        newData.push(newRow);\n      });\n  });\n  return newData;\n};\n\nexport const useData = () => {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    Promise.all(URLS.map(d => csv(d[1]))).then(sourceData => {\n      const data = sourceData.map((d, i) =>\n        nest()\n          .key(d => d['Country/Region'])\n          .key(d => d['date'])\n          .map(meltData(d, URLS[i][0]))\n      );\n      const locations = data[0].keys();\n      let combinedData = [];\n      locations.forEach(loc => {\n        const allData = data.map(d => d[`$${loc}`])\n        const dates = allData[0].keys();\n        dates.forEach(dd => {\n          const values = allData.map(d => d[`$${dd}`][0])\n          let newData = {};\n          ID_COLS.forEach(d => {\n            const val = values[0][d];\n            newData[d] = ['Lat', 'Long'].includes(d) ? +val : val;\n          });\n          newData['date'] = new Date(dd);\n          values.forEach((d,i) => {\n            const name = URLS[i][0];\n            newData[name] = d[name];\n          })\n          combinedData.push(newData);\n        });\n      });\n      const formatedData = nest()\n          .key(d => d['Country/Region'])\n          .sortValues((a, b) => a.date - b.date)\n          .map(combinedData)\n      setData(formatedData);\n    });\n  }, []);\n\n  return data;\n};\n","import React, { useMemo } from 'react';\nimport moment from 'moment';\nimport './Axis.css';\n\nexport const AxisBottom = ({\n  xScale,\n  boundedHeight,\n  boundedWidth,\n  label,\n  labelOffset,\n  tickSize,\n  tickOffset,\n  tickWidth,\n}) => {\n  const range = useMemo(() => xScale.range(), [xScale]);\n  const tickCount = useMemo(() => boundedWidth / tickWidth, [\n    boundedWidth,\n    tickWidth,\n  ]);\n\n  return (\n    <>\n      <path\n        className=\"line\"\n        d={['M', range[0], boundedHeight, 'H', range[1]].join(' ')}\n        // in case of not nice() scale\n        // d={['M', range[0], boundedHeight+6, 'v', -6, 'H', range[1], 'v', 6].join(' ')}\n        fill=\"none\"\n      />\n      {xScale.ticks(tickCount).map((tickValue, i) => (\n        <g\n          className=\"tick\"\n          key={i}\n          transform={`translate(${xScale(tickValue)},0)`}\n        >\n          <line y1={boundedHeight} y2={boundedHeight + tickSize} />\n          {/* <line y1={boundedHeight - tickSize} y2={boundedHeight} /> */}\n          <text\n            style={{ textAnchor: 'middle' }}\n            dy=\".71em\"\n            y={boundedHeight + tickOffset}\n          >\n            {moment(tickValue).format('Do MMM')}\n          </text>\n        </g>\n      ))}\n      {label && (\n        <text\n          className=\"label\"\n          x={boundedWidth / 2}\n          y={boundedHeight + labelOffset}\n          textAnchor=\"middle\"\n        >\n          {label}\n        </text>\n      )}\n    </>\n  );\n};\n","import React, { useMemo } from 'react';\nimport { format } from 'd3';\nimport './Axis.css';\n\nconst formatNumbers = format('.0s');\n\nexport const AxisLeft = ({\n  yScale,\n  boundedHeight,\n  boundedWidth,\n  label,\n  labelOffset,\n  tickSize,\n  tickOffset,\n  tickHeight,\n}) => {\n  const range = useMemo(() => yScale.range(), [yScale]);\n  const tickCount = useMemo(() => boundedHeight / tickHeight, [\n    boundedHeight,\n    tickHeight,\n  ]);\n  const logFormat = yScale.tickFormat(tickCount, '');\n\n  return (\n    <>\n      <path\n        className=\"line\"\n        d={['M', 0, range[1], 'v', range[0]].join(' ')}\n        fill=\"none\"\n      />\n      {yScale\n        .ticks(tickCount)\n        .filter(d => d >= 1)\n        .map(logFormat)\n        .filter(d => d !== '')\n        .map((tickValue, i) => (\n          <g\n            key={i}\n            className=\"tick\"\n            transform={`translate(0,${yScale(tickValue)})`}\n          >\n            <line x2={-tickSize} />\n            <text\n              key={tickValue}\n              style={{ textAnchor: 'end' }}\n              x={-tickOffset}\n              dy=\".32em\"\n            >\n              {formatNumbers(tickValue)}\n            </text>\n          </g>\n        ))}\n      {label && (\n        <text\n          className=\"label\"\n          textAnchor=\"middle\"\n          transform={`translate(${-labelOffset},${boundedHeight /\n            2}) rotate(-90)`}\n        >\n          {label}\n        </text>\n      )}\n    </>\n  );\n};\n","import React, { useEffect, useRef } from 'react';\nimport { select, line, easeCubic } from 'd3';\nimport { interpolatePath } from 'd3-interpolate-path';\nimport { useSpring, animated } from 'react-spring';\nimport './Marks.css';\n\nconst Dot = ({ x, y, fill, transition }) => {\n  const ref = useRef();\n\n  const style = useSpring({\n    config: { duration: transition, easing: easeCubic },\n    cx: x,\n    cy: y,\n    fill: fill\n  });\n\n  return <animated.circle {...style} ref={ref} />;\n};\n\nexport const Marks = ({\n  data,\n  xScale,\n  yScale,\n  xValue,\n  yValue,\n  transition,\n  color,\n}) => {\n  const path = useRef(null);\n\n  useEffect(() => {\n    select(path.current)\n      .transition()\n      .duration(transition)\n      .attrTween('d', function() {\n        const prev = select(this).attr('d');\n        const current = line()\n          .x(d => xScale(xValue(d)))\n          .y(d => yScale(yValue(d)))(data);\n        return interpolatePath(prev, current);\n      });\n  }, [data, xScale, yScale, xValue, yValue, transition]);\n\n  return (\n    <g className=\"marks\">\n      <path ref={path} stroke={color} />\n      {data.map((d, i) => (\n        <Dot\n          key={i}\n          x={xScale(xValue(d))}\n          y={yScale(yValue(d))}\n          fill={color}\n          transition={transition}\n        />\n      ))}\n    </g>\n  );\n};\n","// from: https://wattenberger.com/blog/react-and-d3\n// npm i @juggle/resize-observer\nimport { ResizeObserver } from '@juggle/resize-observer';\nimport { useRef, useEffect, useState } from 'react';\n\n// possible chart settings:\n// const dimensions = {\n//   \"width\": 363,\n//   \"height\": 181,\n//   \"marginTop\": 56,\n//   \"marginRight\": 47,\n//   \"marginBottom\": 81,\n//   \"marginLeft\": 68\n// }\n\nconst combineChartDimensions = dimensions => {\n  const parsedDimensions = {\n      ...dimensions,\n      marginTop: dimensions.marginTop || 10,\n      marginRight: dimensions.marginRight || 10,\n      marginBottom: dimensions.marginBottom || 40,\n      marginLeft: dimensions.marginLeft || 75,\n  }\n\n  return {\n      ...parsedDimensions,\n      boundedHeight: Math.max(\n        parsedDimensions.height\n        - parsedDimensions.marginTop\n        - parsedDimensions.marginBottom,\n        0,\n      ),\n      boundedWidth: Math.max(\n        parsedDimensions.width\n        - parsedDimensions.marginLeft\n        - parsedDimensions.marginRight,\n        0,\n      ),\n  }\n}\n\nexport const useChartDimensions = passedSettings => {\n  const ref = useRef();\n  const dimensions = combineChartDimensions(passedSettings);\n  const [width, setWidth] = useState(0);\n  const [height, setHeight] = useState(0);\n\n  useEffect(() => {\n    if (dimensions.width && dimensions.height) return [ref, dimensions];\n    const element = ref.current;\n    const resizeObserver = new ResizeObserver(entries => {\n      if (!Array.isArray(entries)) return;\n      if (!entries.length) return;\n      const entry = entries[0];\n      if (width !== entry.contentRect.width) setWidth(entry.contentRect.width);\n      if (height !== entry.contentRect.height)\n        setHeight(entry.contentRect.height);\n    });\n    resizeObserver.observe(element);\n    return () => resizeObserver.unobserve(element);\n  }, []);\n\n  const newSettings = combineChartDimensions({\n    ...dimensions,\n    width: dimensions.width || width,\n    height: dimensions.height || height,\n  });\n\n  return [ref, newSettings];\n};\n","import React from 'react';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport './SelectLocation.css';\nimport { ascending } from 'd3';\n\nexport const SelectLocation = ({ locations, defaultLocation, onChange }) => {\n  return (\n    <Autocomplete\n      className=\"autocomplete\"\n      multiple\n      options={locations.sort(ascending)}\n      // getOptionLabel={option => option.title}\n      defaultValue={defaultLocation}\n      onChange={onChange}\n      renderInput={params => (\n        <TextField {...params} variant=\"standard\" label=\"Select locations\" />\n      )}\n    />\n  );\n};\n","import React, { useMemo, useState } from 'react';\nimport {\n  scaleTime,\n  extent,\n  max,\n  scaleLog,\n  schemeTableau10,\n} from 'd3';\nimport { AxisBottom } from './AxisBottom';\nimport { AxisLeft } from './AxisLeft';\nimport { Marks } from './Marks';\nimport { useChartDimensions } from './useChartDimensions';\nimport { SelectLocation } from './SelectLocation';\nimport './LineChart.css';\nimport { Button, Col, Row } from 'react-bootstrap';\n\nexport const LineChart = ({\n  title,\n  data,\n  dimensions,\n  xAxis,\n  yAxis,\n  xValues,\n  yValues,\n  transitions,\n  defaultLocations,\n  onClose,\n}) => {\n  const [ref, dms] = useChartDimensions(dimensions);\n  const {\n    width,\n    height,\n    marginLeft,\n    marginTop,\n    marginBottom,\n    marginRight,\n    boundedHeight,\n    boundedWidth,\n  } = dms;\n\n  const [selection, setSelection] = useState(defaultLocations);\n\n  const selectedData = useMemo(() => {\n    if (data) return selection.map(d => data[`$${d}`]);\n  }, [data, selection]);\n\n  const xScale = useMemo(() => {\n    if (!selectedData) return;\n    const domain = extent(selectedData.map(d => d.map(xValues)).flat());\n    return scaleTime()\n      .domain(domain)\n      .range([0, boundedWidth])\n      .nice();\n  }, [selectedData, xValues, boundedWidth]);\n\n  const yScale = useMemo(() => {\n    if (!selectedData) return;\n    const domain = [0.1, max(selectedData.map(d => d.map(yValues)).flat())];\n    return scaleLog()\n      .domain(domain)\n      .range([boundedHeight, 0])\n      .nice();\n  }, [selectedData, yValues, boundedHeight]);\n\n  return (\n    <div className=\"chart\">\n      <Row className=\"chart-selector justify-content-center\">\n        <Col md={11}>\n          <SelectLocation\n            locations={data ? data.keys() : [selection]}\n            defaultLocation={defaultLocations}\n            onChange={(e, d) => setSelection(d)}\n          />\n        </Col>\n        <Col md={1}>\n          <Button\n            variant=\"outline-danger close-button\"\n            size=\"sm\"\n            onClick={onClose}\n          >\n            <span>x</span>\n          </Button>\n        </Col>\n      </Row>\n      <div className=\"chart-container\" ref={ref}>\n        <svg width={width} height={height}>\n          <g transform={`translate(${marginLeft},${marginTop})`}>\n            {title && (\n              <text\n                className=\"title\"\n                x={boundedWidth / 2 + title.dx}\n                y={title.dy}\n                textAnchor=\"middle\"\n              >\n                {title.label}\n              </text>\n            )}\n            {selectedData ? (\n              <>\n                <AxisBottom\n                  xScale={xScale}\n                  boundedHeight={boundedHeight}\n                  boundedWidth={boundedWidth}\n                  {...xAxis}\n                />\n                <AxisLeft\n                  yScale={yScale}\n                  boundedHeight={boundedHeight}\n                  boundedWidth={boundedWidth}\n                  {...yAxis}\n                />\n                {selectedData.map((d, i) => (\n                  <Marks\n                    key={i}\n                    data={d}\n                    xScale={xScale}\n                    yScale={yScale}\n                    xValue={xValues}\n                    yValue={yValues}\n                    transition={transitions.lines}\n                    color={schemeTableau10[i % schemeTableau10.length]}\n                  />\n                ))}\n              </>\n            ) : (\n              <text>Loading...</text>\n            )}\n          </g>\n        </svg>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport { useData } from './useData';\nimport { LineChart } from './LineChart';\n\nconst chartConfig = {\n  // title: {\n  //   label: 'Testing',\n  //   dx: 0,\n  //   dy: -20,\n  // },\n  dimensions: {\n    marginTop: 10,\n    marginRight: 35,\n    marginBottom: 30,\n    marginLeft: 75,\n  },\n  xAxis: {\n    tickSize: 6,\n    tickOffset: 15,\n    tickWidth: 130\n  },\n  yAxis: {\n    label: 'Cases',\n    labelOffset: 50,\n    tickSize: 6,\n    tickOffset: 10,\n    tickHeight: 100\n  },\n  xValues: d => d.date,\n  yValues: d => d.Confirmed === 0 ? 0.1 : d.Confirmed,\n  transitions: {\n    lines: 500,\n  },\n  defaultLocations: ['Peru', 'Australia', 'Iran', 'Italy'],\n};\n\nfunction App() {\n  const data = useData();\n  const [charts, setCharts] = useState([0]);\n\n  return (\n    <Container className=\"app-container\">\n      <header>\n        <h1 className=\"mt-4 mb-4\">Covid 2019</h1>\n      </header>\n\n      <main>\n        <Row>\n          <Col>\n            <p>\n              Plots of coronavirus data (\n              <a href='https://github.com/CSSEGISandData/COVID-19/tree/master/csse_covid_19_data' target=\"_black\">\n                source\n              </a>\n              ).\n            </p>\n          </Col>\n        </Row>\n\n        <Row>\n          {charts.map(i => (\n            <Col key={i} md={12} xl={charts.length > 1 ? 6 : 12}>\n              <LineChart\n                data={data}\n                onClose={() =>\n                  setCharts(d => {\n                    const idx = d.indexOf(i);\n                    const out = d.slice();\n                    out.splice(idx, 1);\n                    return out;\n                  })\n                }\n                {...chartConfig}\n              />\n            </Col>\n          ))}\n        </Row>\n        <Row className=\"mt-2\">\n          <Col className=\"text-right\">\n            <Button\n              onClick={() =>\n                setCharts(d => {\n                  const idx = d.length === 0 ? 0 : d[d.length - 1] + 1;\n                  return d.concat(idx);\n                })\n              }\n            >\n              Add Chart\n            </Button>\n          </Col>\n        </Row>\n      </main>\n\n      <footer>\n        <Row>\n          <Col className=\"mt-4 text-right\">\n            <a href=\"https://github.com/renato145/covid2019\" target=\"_black\">\n              Source code\n            </a>\n          </Col>\n        </Row>\n      </footer>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}