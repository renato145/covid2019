{"version":3,"sources":["useData.js","AxisBottom.js","AxisLeft.js","Marks.js","useChartDimensions.js","SelectLocation.js","ChartToolTip.js","ToogleSwitch.js","Voronoi.js","LineChart.js","useD3Zoom.js","utils.js","App.js","index.js"],"names":["URLS","ID_COLS","customAnnotations","Peru","useData","useState","data","setData","useEffect","Promise","all","map","d","csv","then","sourceData","i","nest","key","name","newData","forEach","row","Object","keys","filter","col","includes","newRow","push","meltData","locations","combinedData","loc","allData","dates","idxConfirmed","idxDeaths","locAnn","dd","values","val","dateAnn","groupValues","reduce","acc","Date","formatedData","sortValues","a","b","date","AxisBottom","xScale","boundedHeight","boundedWidth","label","labelOffset","tickSize","tickOffset","tickWidth","tickWidthDate","range","useMemo","tickCount","className","join","fill","ticks","tickValue","transform","y1","y2","style","textAnchor","dy","y","moment","format","x","formatNumbers","AxisLeft","yScale","tickHeight","logFormat","tickFormat","x2","Dot","r","transition","useSpring","config","duration","easing","easeCubicOut","cx","cy","setStyle","circle","Marks","xValue","yValue","color","path","useRef","select","current","ease","attrTween","prev","this","attr","line","interpolatePath","ref","stroke","combineChartDimensions","dimensions","parsedDimensions","marginTop","marginRight","marginBottom","marginLeft","Math","max","height","width","LocationTag","tag","onDelete","Chip","e","backgroundColor","SelectLocation","colors","colorScheme","onChange","Autocomplete","multiple","options","sort","ascending","value","renderInput","params","TextField","variant","renderTags","length","numberFormat","ChartToolTip","up","text","country","confirmed","deaths","recovered","opacity","TextLabel","styled","active","right","left","SwitchLabel","Slider","span","inactiveColor","ballSize","ballMargin","activeColor","move","ToogleSwitch","preLabel","type","checked","Voronoi","xValues","yValues","onMouseEnter","onMouseLeave","o","box","voronoiData","points","day","assign","flat","voronoi","Delaunay","from","paths","renderCell","onTouchStart","onTouchEnd","LineChart","title","xAxis","yAxis","transitions","defaultLocations","onClose","passedSettings","setWidth","setHeight","element","resizeObserver","ResizeObserver","entries","Array","isArray","entry","contentRect","observe","unobserve","newSettings","useChartDimensions","dms","svgInteractionRef","selection","setSelection","setColors","toolTipData","setToolTipData","switchXValue","setSwitchXValue","switchXAxis","setSwitchXAxis","zoomProps","k","setZoomProps","d3Zoom","zoom","scaleExtent","on","event","svg","call","zoomIdentity","useD3Zoom","useCallback","selectedData","domain","extent","scaleLinear","scaleTime","scaleLog","nice","xScaleShow","rescaleX","copy","yScaleShow","rescaleY","currentKeys","newColors","currentColors","idx","annotations","dx","note","lineType","align","wrap","orientation","subject","radius","radiusPadding","marks","location","schemeTableau10","lines","handleVoronoiMouseEnter","min","xShow","invert","yShow","tooltipX","tooltipY","handleVoronoiMouseLeave","Row","Col","indexOf","newSelection","slice","splice","Button","size","onClick","sm","md","position","highlight","props","chartConfig","App","charts","setCharts","Container","href","target","xl","out","concat","ReactDOM","render","document","getElementById"],"mappings":"iXAGMA,EAAO,CACX,CACE,YACA,0JAEF,CACE,SACA,uJAEF,CACE,YACA,2JAGEC,EAAU,CAAC,iBAAkB,iBAAkB,MAAO,QAmBtDC,EAAoB,CACxBC,KAAM,CACJ,UAAW,sBAIFC,EAAU,WAAO,IAAD,EACHC,mBAAS,MADN,mBACpBC,EADoB,KACdC,EADc,KAyD3B,OAtDAC,qBAAU,WACRC,QAAQC,IAAIV,EAAKW,KAAI,SAAAC,GAAC,OAAIC,YAAID,EAAE,QAAME,MAAK,SAAAC,GACzC,IAAMT,EAAOS,EAAWJ,KAAI,SAACC,EAAGI,GAAJ,OAC1BC,cACGC,KAAI,SAAAN,GAAC,OAAIA,EAAE,qBACXM,KAAI,SAAAN,GAAC,OAAIA,EAAC,QACVD,IAhCM,SAACL,EAAMa,GACtB,IAAIC,EAAU,GAad,OAZAd,EAAKe,SAAQ,SAAAC,GACXC,OAAOC,KAAKF,GACTG,QAAO,SAAAC,GAAG,OAAKzB,EAAQ0B,SAASD,MAChCL,SAAQ,SAAAK,GACP,GAAiB,KAAbJ,EAAII,GAAR,CACA,IAAIE,EAAS,GACb3B,EAAQoB,SAAQ,SAAAT,GAAC,OAAKgB,EAAOhB,GAAKU,EAAIV,MACtCgB,EAAM,KAAWF,EACjBE,EAAOT,IAASG,EAAII,GACpBN,EAAQS,KAAKD,UAGZR,EAkBMU,CAASlB,EAAGZ,EAAKgB,GAAG,QAEvBe,EAAYzB,EAAK,GAAGkB,OACtBQ,EAAe,GACnBD,EAAUV,SAAQ,SAAAY,GAChB,IAAMC,EAAU5B,EAAKK,KAAI,SAAAC,GAAC,OAAIA,EAAE,IAAD,OAAKqB,OAAQR,QAAO,SAAAb,GAAC,OAAIA,KAClDuB,EAAQD,EAAQ,GAAGV,OACrBY,GAAgB,EAChBC,GAAa,EACXC,EAASpC,EAAkB+B,GACjCE,EAAMd,SAAQ,SAAAkB,GACZ,IAAMC,EAASN,EAAQvB,KAAI,SAAAC,GAAC,OAAIA,EAAE,IAAD,OAAK2B,OAClCnB,EAAU,GACdnB,EAAQoB,SAAQ,SAAAT,GACd,IAAM6B,EAAMD,EAAO,GAAG,GAAG5B,GAEzB,GADAQ,EAAQR,GAAK,CAAC,MAAO,QAAQe,SAASf,IAAM6B,EAAMA,EAC9CH,EAAQ,CACV,IAAMI,EAAUJ,EAAOC,GACnBG,IAAStB,EAAO,WAAiBsB,OAGzCF,EAAOnB,SAAQ,SAACsB,EAAa3B,GAC3B,GAAK2B,EAAL,CACA,IAAMxB,EAAOnB,EAAKgB,GAAG,GACrBI,EAAQD,GAAQwB,EACbhC,KAAI,SAAA8B,GAAG,OAAIA,EAAItB,MACfyB,QAAO,SAACC,EAAKJ,GAAN,OAAcA,EAAMI,SAE5BzB,EAAO,UAAgB,IACzBgB,IACAhB,EAAO,KAAW,IAAI0B,KAAKP,GAC3BnB,EAAO,aAAmBgB,EACtBhB,EAAO,OAAa,IACtBiB,IACAjB,EAAO,UAAgBiB,GAEzBL,EAAaH,KAAKT,UAIxB,IAAM2B,EAAe9B,cAClBC,KAAI,SAAAN,GAAC,OAAIA,EAAE,qBACXoC,YAAW,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,KAAOD,EAAEC,QAChCxC,IAAIqB,GACPzB,EAAQwC,QAET,IAEIzC,G,0BC/FI8C,G,OAAa,SAAC,GAWpB,IAVLC,EAUI,EAVJA,OACAC,EASI,EATJA,cACAC,EAQI,EARJA,aACAJ,EAOI,EAPJA,KACAK,EAMI,EANJA,MACAC,EAKI,EALJA,YACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,UACAC,EACI,EADJA,cAEMC,EAAQC,mBAAQ,kBAAMV,EAASA,EAAOS,QAAS,KAAI,CAACT,IACpDW,EAAYD,mBAAQ,kBAAMR,GAAgBJ,EAAOU,EAAgBD,KAAY,CACjFL,EACAK,EACAC,EACAV,IAGF,OACE,oCACE,0BACEc,UAAU,OACVrD,EAAG,CAAC,IAAKkD,EAAM,GAAIR,EAAe,IAAKQ,EAAM,IAAII,KAAK,KAGtDC,KAAK,SAENd,GAAUA,EAAOe,MAAMJ,GAAWrD,KAAI,SAAC0D,EAAWrD,GAAZ,OACrC,uBACEiD,UAAU,OACV/C,IAAKF,EACLsD,UAAS,oBAAejB,EAAOgB,GAAtB,QAET,0BAAME,GAAIjB,EAAekB,GAAIlB,EAAgBI,IAE7C,0BACEe,MAAO,CAAEC,WAAY,UACrBC,GAAG,QACHC,EAAGtB,EAAgBK,GAElBR,EAAO0B,IAAOR,GAAWS,OAAO,UAAYT,OAIlDb,GACC,0BACES,UAAU,QACVc,EAAGxB,EAAe,EAClBqB,EAAGtB,EAAgBG,EACnBiB,WAAW,UAEVlB,MCrDLwB,EAAgBF,YAAO,OAEhBG,EAAW,SAAC,GASlB,IARLC,EAQI,EARJA,OACA5B,EAOI,EAPJA,cACAC,EAMI,EANJA,aACAC,EAKI,EALJA,MACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,WACAwB,EACI,EADJA,WAEMrB,EAAQC,mBAAQ,kBAAMmB,EAAOpB,UAAS,CAACoB,IACvClB,EAAYD,mBAAQ,kBAAMT,EAAgB6B,IAAY,CAC1D7B,EACA6B,IAEIC,EAAYF,EAAOG,WAAWrB,EAAW,IAE/C,OACE,oCACE,0BACEC,UAAU,OACVrD,EAAG,CAAC,IAAK,EAAGkD,EAAM,GAAI,IAAKA,EAAM,IAAII,KAAK,KAC1CC,KAAK,SAENe,EACEd,MAAMJ,GACNvC,QAAO,SAAAb,GAAC,OAAIA,GAAK,KACjBD,IAAIyE,GACJ3D,QAAO,SAAAb,GAAC,MAAU,KAANA,KACZD,KAAI,SAAC0D,EAAWrD,GAAZ,OACH,uBACEE,IAAKF,EACLiD,UAAU,OACVK,UAAS,sBAAiBY,EAAOb,GAAxB,MAET,0BAAMiB,IAAK5B,IACX,0BAAMO,UAAU,YAAYqB,GAAI/B,IAChC,0BACErC,IAAKmD,EACLI,MAAO,CAAEC,WAAY,OACrBK,GAAIpB,EACJgB,GAAG,SAEFK,EAAcX,QAItBb,GACC,0BACES,UAAU,QACVS,WAAW,SACXJ,UAAS,qBAAgBb,EAAhB,YAA+BH,EACtC,EADO,kBAGRE,K,iBCtDE+B,G,OAAM,SAAC,GAAmC,IAAjCR,EAAgC,EAAhCA,EAAGH,EAA6B,EAA7BA,EAAGY,EAA0B,EAA1BA,EAAGrB,EAAuB,EAAvBA,KAAMsB,EAAiB,EAAjBA,WAAiB,EAC1BC,aAAU,iBAAO,CACzCC,OAAQ,CAAEC,SAAUH,EAAYI,OAAQC,KACxCC,GAAIhB,EACJiB,GAAIpB,EACJY,EAAG,EACHrB,KAAMA,GAAc,cAN8B,mBAC7CM,EAD6C,KACtCwB,EADsC,KAkBpD,OATAzF,qBAAU,WACRyF,EAAS,CACPF,GAAIhB,EACJiB,GAAIpB,EACJY,EAAGA,EACHrB,KAAMA,GAAc,cAErB,CAAC8B,EAAUlB,EAAGH,EAAGT,EAAMqB,IAGxB,kBAAC,IAASU,OACJzB,KAKG0B,EAAQ,SAAC,GAQf,IAPL7F,EAOI,EAPJA,KACA+C,EAMI,EANJA,OACA6B,EAKI,EALJA,OACAkB,EAII,EAJJA,OACAC,EAGI,EAHJA,OACAZ,EAEI,EAFJA,WACAa,EACI,EADJA,MAEMC,EAAOC,iBAAO,MAgBpB,OAdAhG,qBAAU,WACRiG,YAAOF,EAAKG,SACTjB,aACAG,SAASH,GACTkB,KAAKb,KACLc,UAAU,KAAK,WACd,IAAMC,EAAOJ,YAAOK,MAAMC,KAAK,KACzBL,EAAUM,cACbjC,GAAE,SAAAnE,GAAC,OAAIyC,EAAO+C,EAAOxF,OACrBgE,GAAE,SAAAhE,GAAC,OAAIsE,EAAOmB,EAAOzF,MAFRoG,CAEa1G,GAC7B,OAAO2G,0BAAgBJ,EAAMH,QAEhC,CAACpG,EAAM+C,EAAQ6B,EAAQkB,EAAQC,EAAQZ,IAGxC,uBAAGxB,UAAU,SACX,0BAAMiD,IAAKX,EAAMY,OAAQb,M,iBC3CzBc,EAAyB,SAAAC,GAC7B,IAAMC,EAAgB,eACfD,EADe,CAElBE,UAAWF,EAAWE,WAAa,GACnCC,YAAaH,EAAWG,aAAe,GACvCC,aAAcJ,EAAWI,cAAgB,GACzCC,WAAYL,EAAWK,YAAc,KAGzC,OAAO,eACAJ,EADP,CAEIhE,cAAeqE,KAAKC,IAClBN,EAAiBO,OACfP,EAAiBC,UACjBD,EAAiBG,aACnB,GAEFlE,aAAcoE,KAAKC,IACjBN,EAAiBQ,MACfR,EAAiBI,WACjBJ,EAAiBE,YACnB,M,2BC7BFO,G,OAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAK1B,EAAR,EAAQA,MAAO2B,EAAf,EAAeA,SAAf,OAClB,kBAACC,EAAA,EAAD,CACEjE,UAAU,eACVT,MAAOwE,EACPC,SAAU,SAAAE,GAAC,OAAIF,EAASE,EAAGH,IAC3BvD,MAAO,CAAE2D,gBAAiB9B,EAAOA,MAAO,aAI/B+B,EAAiB,SAAC,GAOxB,IANLtG,EAMI,EANJA,UACAS,EAKI,EALJA,OACA8F,EAII,EAJJA,OACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,SACAP,EACI,EADJA,SAEA,OACE,kBAACQ,EAAA,EAAD,CACExE,UAAU,eACVyE,UAAQ,EACRC,QAAS5G,EAAU6G,KAAKC,KAExBC,MAAOtG,EACPgG,SAAUA,EACVO,YAAa,SAAAC,GAAM,OACjB,kBAACC,EAAA,EAAD,iBAAeD,EAAf,CAAuBE,QAAQ,WAAW1F,MAAM,uBAElD2F,WAAY,SAAAnB,GAAG,OACbA,EAAIrH,KAAI,SAACC,EAAGI,GAAJ,OACN,kBAAC,EAAD,CACEE,IAAKN,EACLoH,IAAKpH,EACL0F,MAAOiC,EAAYD,EAAO1H,GAAK2H,EAAYa,QAC3CnB,SAAUA,WCpChBoB,G,OAAevE,YAAO,MAUfwE,EAAe,SAAC,GAA+B,IAA7BhJ,EAA4B,EAA5BA,KAAMyE,EAAsB,EAAtBA,EAAGH,EAAmB,EAAnBA,EAAG0B,EAAgB,EAAhBA,MAAOiD,EAAS,EAATA,GAC1CC,EAAOzF,mBAAQ,WACnB,GAAKzD,EACL,MAAO,CACL6C,KAAM0B,IAAOvE,EAAI,MAAUwE,OAAO,UAClC2E,QAASnJ,EAAK,kBACdoJ,UAAWL,EAAa/I,EAAI,WAC5BqJ,OAAQN,EAAa/I,EAAI,QACzBsJ,UAAWP,EAAa/I,EAAI,cAE7B,CAACA,IAEJ,OACE,yBACE2D,UAAU,UACVQ,MAAO,CACLH,UAAU,aAAD,OAAeS,EAAf,cAAsBwE,EAAE,eAAW3E,EAAE,GAAb,wBAAiCA,EAAE,GAAnC,MAAxB,KACTwD,gBAAiB9B,EACjBuD,QAASL,EAAO,IAAO,IAGzB,yBAAKvF,UAAU,iBACX3D,GACA,oCACE,2BAAIkJ,EAAKC,QAAT,MAAqBD,EAAKrG,MAAS,6BACnC,4CAAkBqG,EAAKE,WAAiB,6BACxC,yCAAeF,EAAKG,QAAc,6BAClC,4CAAkBH,EAAKI,e,wvCCvCnC,IAAME,EAAYC,IAAOvG,MAAV,KAGE,SAAA5C,GAAC,OAAIA,EAAEoJ,OAAS,IAAM,OACnB,SAAApJ,GAAC,OAAIA,EAAEoJ,OAAS,IAAM,OAC7B,SAAApJ,GAAC,OAAIA,EAAEoJ,OAAS,EAAI,MAChB,SAAApJ,GAAC,OAAKA,EAAEqJ,MAAQ,IAAO,KACtB,SAAArJ,GAAC,OAAKA,EAAEsJ,KAAO,IAAO,KAIlCC,EAAcJ,IAAOvG,MAAV,KAGN,SAAA5C,GAAC,OAAIA,EAAEkH,SACN,SAAAlH,GAAC,OAAIA,EAAEiH,UASbuC,EAASL,IAAOM,KAAV,KAQU,SAAAzJ,GAAC,OAAIA,EAAE0J,iBAQf,SAAA1J,GAAC,OAAIA,EAAE2J,YACR,SAAA3J,GAAC,OAAIA,EAAE2J,YACR,SAAA3J,GAAC,OAAIA,EAAE4J,cACL,SAAA5J,GAAC,OAAIA,EAAE4J,cAOG,SAAA5J,GAAC,OAAIA,EAAE6J,eAIL,SAAA7J,GAAC,OAAIA,EAAE6J,eAIG,SAAA7J,GAAC,OAAIA,EAAE8J,QACX,SAAA9J,GAAC,OAAIA,EAAE8J,QACX,SAAA9J,GAAC,OAAIA,EAAE8J,QAItBC,EAAe,SAAC,GAUtB,IATL7B,EASI,EATJA,MACA8B,EAQI,EARJA,SACApH,EAOI,EAPJA,MAOI,IANJsE,aAMI,MANI,IAMJ,MALJD,cAKI,MALK,IAKL,MAJJ2C,kBAII,MAJS,GAIT,MAHJC,mBAGI,MAHU,UAGV,MAFJH,qBAEI,MAFY,OAEZ,MADJ9B,gBACI,MADO,aACP,EACE+B,EAAW1C,EAAsB,EAAb2C,EAE1B,OACE,6BACGI,GAAY,kBAACd,EAAD,CAAWI,MAAI,EAACF,QAASlB,GAAQ8B,GAC9C,kBAACT,EAAD,CAAarC,MAAOA,EAAOD,OAAQA,GACjC,2BAAOgD,KAAK,WAAWC,QAAShC,EAAON,SAAUA,IACjD,kBAAC4B,EAAD,CACEG,SAAUA,EACVG,KAAM5C,EAAQyC,EAAwB,EAAbC,EACzBA,WAAYA,EACZC,YAAaA,EACbH,cAAeA,KAGlB9G,GAAS,kBAACsG,EAAD,CAAWG,OAAK,EAACD,OAAQlB,GAAQtF,K,kBC1FpCuH,EAAU,SAAC,GAcjB,IAbLzK,EAaI,EAbJA,KACA+C,EAYI,EAZJA,OACA2H,EAWI,EAXJA,QACA9F,EAUI,EAVJA,OACA+F,EASI,EATJA,QACAnD,EAQI,EARJA,MACAD,EAOI,EAPJA,OACAH,EAMI,EANJA,WACAF,EAKI,EALJA,YACAC,EAII,EAJJA,aACAF,EAGI,EAHJA,UAGI,IAFJ2D,oBAEI,MAFW,aAEX,MADJC,oBACI,MADW,aACX,EACEpI,EAAegB,mBAAQ,WAC3B,GAAKzD,EAEL,OAAOA,EAAKK,KAAI,SAAAC,GAAC,OACfA,EAAED,KAAI,SAAAyK,GAGJ,MAAO,CAAErG,EAFC1B,EAAO2H,EAAQI,IAEbxG,EADFM,EAAO+F,EAAQG,aAI5B,CAAC9K,EAAM+C,EAAQ2H,EAAS9F,EAAQ+F,IAE7BI,EAAMtH,mBACV,iBAAM,CACJ,EACA,EACA+D,EAAQN,EAAcE,EAAa,IACnCG,EAASJ,EAAeF,EAAY,OAEtC,CAACM,EAAQJ,EAAcC,EAAYF,EAAaD,EAAWO,IAGvDwD,EAAcvH,mBAAQ,WAC1B,KAAIsH,EAAI,GAAKA,EAAI,IAAM,GAAKA,EAAI,GAAKA,EAAI,IAAM,GAA/C,CACA,IAAME,EAASxI,EACZpC,KAAI,SAACC,EAAGqB,GAAJ,OAAYrB,EAAED,KAAI,SAACyK,EAAGI,GAAJ,OAAYjK,OAAOkK,OAAO,CAAExJ,MAAKuJ,OAAOJ,SAC9DM,OACH,MAAO,CACLH,SACAI,QAASC,IAASC,KAChBN,EAAO5K,KAAI,SAAAC,GAAC,MAAI,CAACA,EAAEmE,EAAIsG,EAAI,GAAIzK,EAAEgE,EAAIyG,EAAI,QACzCM,QAAQN,OAEX,CAACtI,EAAcsI,IAEZS,EAAQ/H,mBAAQ,WACpB,GAAKuH,EAAL,CAD0B,IAElBC,EAAoBD,EAApBC,OAAQI,EAAYL,EAAZK,QAChB,OAAOJ,EAAO5K,KAAI,WAAqBK,GAArB,IAAG+D,EAAH,EAAGA,EAAGH,EAAN,EAAMA,EAAG3C,EAAT,EAASA,IAAKuJ,EAAd,EAAcA,IAAd,OAChB,0BACEtK,IAAKF,EACLJ,EAAG+K,EAAQI,WAAW/K,GAKtB6I,QAAS,EACTqB,aAAc,kBAAMA,EAAajJ,EAAKuJ,EAAKzG,EAAGH,IAC9CoH,aAAc,kBAAMd,EAAajJ,EAAKuJ,EAAKzG,EAAGH,IAC9CqH,WAAY,kBAAMd,EAAalJ,EAAKuJ,EAAKzG,EAAGH,IAC5CuG,aAAc,kBAAMA,EAAalJ,EAAKuJ,EAAKzG,EAAGH,YAGjD,CAAC0G,EAAaJ,EAAcC,IAE/B,OAAO,+BAAKW,EAAL,MC5CII,EAAY,SAAC,GASnB,IARLC,EAQI,EARJA,MACA7L,EAOI,EAPJA,KACA+G,EAMI,EANJA,WACA+E,EAKI,EALJA,MACAC,EAII,EAJJA,MACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,iBACAC,EACI,EADJA,QACI,ELG4B,SAAAC,GAChC,IAAMvF,EAAMV,mBACNa,EAAaD,EAAuBqF,GAFQ,EAGxBpM,mBAAS,GAHe,mBAG3CyH,EAH2C,KAGpC4E,EAHoC,OAItBrM,mBAAS,GAJa,mBAI3CwH,EAJ2C,KAInC8E,EAJmC,KAMlDnM,qBAAU,WACR,GAAI6G,EAAWS,OAAST,EAAWQ,OAAQ,MAAO,CAACX,EAAKG,GACxD,IAAMuF,EAAU1F,EAAIR,QACdmG,EAAiB,IAAIC,KAAe,SAAAC,GACxC,GAAKC,MAAMC,QAAQF,IACdA,EAAQ3D,OAAb,CACA,IAAM8D,EAAQH,EAAQ,GAClBjF,IAAUoF,EAAMC,YAAYrF,OAAO4E,EAASQ,EAAMC,YAAYrF,OAC9DD,IAAWqF,EAAMC,YAAYtF,QAC/B8E,EAAUO,EAAMC,YAAYtF,YAGhC,OADAgF,EAAeO,QAAQR,GAChB,kBAAMC,EAAeQ,UAAUT,MACrC,IAEH,IAAMU,EAAclG,EAAuB,eACtCC,EADqC,CAExCS,MAAOT,EAAWS,OAASA,EAC3BD,OAAQR,EAAWQ,QAAUA,KAG/B,MAAO,CAACX,EAAKoG,GK7BMC,CAAmBlG,GADlC,mBACGH,EADH,KACQsG,EADR,KAGF1F,EAQE0F,EARF1F,MACAD,EAOE2F,EAPF3F,OACAH,EAME8F,EANF9F,WACAH,EAKEiG,EALFjG,UACAE,EAIE+F,EAJF/F,aACAD,EAGEgG,EAHFhG,YACAlE,EAEEkK,EAFFlK,cACAC,EACEiK,EADFjK,aAGIkK,EAAoBjH,mBAbtB,EAc8BnG,mBAASkM,GAdvC,mBAcGmB,EAdH,KAccC,EAdd,OAewBtN,mBAAS,IAfjC,mBAeGiI,EAfH,KAeWsF,EAfX,OAgBkCvN,qBAhBlC,mBAgBGwN,EAhBH,KAgBgBC,EAhBhB,OAiBoCzN,oBAAS,GAjB7C,oBAiBG0N,GAjBH,MAiBiBC,GAjBjB,SAkBkC3N,oBAAS,GAlB3C,qBAkBG4N,GAlBH,MAkBgBC,GAlBhB,MAmBEC,GCtDiB,SAAC,GAAa,IAAXjH,EAAU,EAAVA,IAAU,EACF7G,mBAAS,CAAE+N,EAAG,EAAGrJ,EAAG,EAAGH,EAAG,IADxB,mBAC7BuJ,EAD6B,KAClBE,EADkB,KAqBpC,OAlBA7N,qBAAU,WACR,IAIM8N,EAASC,cAEZC,YAAY,CAAC,EAAG,IAChBC,GAAG,QAPc,WAClBJ,EAAaK,IAAMpK,cAQfqK,EAAMlI,YAAOS,EAAIR,SAEvBiI,EAAIC,KAAKN,GACTK,EAAIF,GAAG,iBAAiB,WACtBH,EAAOhK,UAAUqK,EAAKE,UAEvB,CAAC3H,IAEGiH,EDiCWW,CAAU,CAAE5H,IAAKuG,IAE7BzC,GAAU+D,uBACd,SAAAnO,GAAC,OACCqN,GACIF,GACEnN,EAAC,UACDA,EAAC,aACHA,EAAC,OACP,CAACqN,GAAaF,KAGV9C,GAAU8D,uBACd,SAAAnO,GAAC,OAAKmN,GAAenN,EAAC,OAAaA,EAAC,YACpC,CAACmN,KAGGiB,GAAejL,mBAAQ,WAC3B,GAAIzD,EACF,OAAOoN,EACJ/M,KAAI,SAAAC,GAAC,OAAIN,EAAK,IAAD,OAAKM,OAClBD,KAAI,SAAAC,GAAC,OAAIA,EAAEa,QAAO,SAAA2J,GAAC,OAAIH,GAAQG,IAAM,UACzC,CAAC9K,EAAMoN,EAAWzC,KAEf5H,GAASU,mBAAQ,WACrB,GAAKiL,GAAL,CACA,IAAMC,EAASC,YAAOF,GAAarO,KAAI,SAAAC,GAAC,OAAIA,EAAED,IAAIqK,OAAUU,QAE5D,OADkBuC,GAAckB,IAAcC,OAE3CH,OAAOA,GACPnL,MAAM,CAAC,EAAGP,OACZ,CAACyL,GAAchE,GAASzH,EAAc0K,KAEnC/I,GAASnB,mBAAQ,WACrB,GAAKiL,GAAL,CACA,IAAMC,EAAS,CAAC,EAAGrH,YAAIoH,GAAarO,KAAI,SAAAC,GAAC,OAAIA,EAAED,IAAIsK,OAAUS,SAC7D,OAAO2D,cACJJ,OAAOA,GACPnL,MAAM,CAACR,EAAe,IACtBgM,UACF,CAACN,GAAc/D,GAAS3H,IAErBiM,GAAaxL,mBAAQ,WACzB,GAAKV,GACL,OAAO8K,GAAUqB,SAAWrB,GAAUqB,SAASnM,IAAUA,GAAOoM,SAC/D,CAACpM,GAAQ8K,KAENuB,GAAa3L,mBAAQ,WACzB,GAAKmB,GACL,OAAOiJ,GAAUwB,SAAWxB,GAAUwB,SAASzK,IAAUA,GAAOuK,SAC/D,CAACvK,GAAQiJ,KAEZ3N,qBAAU,WACHF,GACLsN,GAAU,SAAAlH,GACR,IAAMkJ,EAAcrO,OAAOC,KAAKkF,GAChC,GAA2B,IAAvBkJ,EAAYxG,OAAc,CAC5B,IAAIyG,EAAY,GAEhB,OADAnC,EAAUrM,SAAQ,SAACT,EAAGI,GAAJ,OAAW6O,EAAUjP,GAAKI,KACrC6O,EAET,IAAMC,EAAgBvO,OAAOiB,OAAOkE,GAChCmJ,EAAYtO,OAAOkK,OAAO,GAAI/E,GAiBlC,OAfAgH,EACGjM,QAAO,SAAAb,GAAC,OAAKgP,EAAYjO,SAASf,MAClCS,SAAQ,SAAAT,GAEP,IADA,IAAImP,EAAM,EACHD,EAAcnO,SAASoO,IAC5BA,IAEFF,EAAUjP,GAAKmP,KAGnBH,EACGnO,QAAO,SAAAb,GAAC,OAAK8M,EAAU/L,SAASf,MAChCS,SAAQ,SAAAT,UACAiP,EAAUjP,MAEdiP,OAER,CAACvP,EAAMoN,IAEV,IAAMsC,GAAcjM,mBAAQ,WAC1B,GAAKiL,GAAL,CACA,IAAIgB,EAAc,GA2BlB,OA1BAhB,GAAa3N,SAAQ,SAAAT,GACnBA,EAAEa,QAAO,SAAA2J,GAAC,OAAIA,EAAC,cAAgB/J,SAAQ,SAAA+J,GACrC,IAAMrG,EAAI1B,GAAO2H,GAAQI,IACnBxG,EAAIM,GAAO+F,GAAQG,IAIzB4E,EAAYnO,KAAK,CACfoC,UAAW,oBACXc,IACAH,IACAqL,GAAIlL,EAPK,GAOI2C,EALF,IAKuBI,EAAQN,GAPjC,MAQT7C,GAPS,GAQTuL,KAAM,CACJ/D,MAAOf,EAAE,kBACT5H,MAAO4H,EAAC,WACR+E,SAAU,KACVC,MAAO,SACPC,KAZS,GAaTC,YAAa,aAEfC,QAAS,CAAEC,OAAQ,GAAIC,cAAe,WAKrCT,KACN,CACDtI,EACAF,EACAwH,GACAlH,EACAzE,GACA2H,GACA9F,GACA+F,KAGIyF,GAAQ3M,mBAAQ,WACpB,GAAIiL,GACF,OACE,oCACGA,GAAarO,KAAI,SAACC,EAAGI,GACpB,GAAiB,IAAbJ,EAAEwI,OAAN,CACA,IAAMuH,EAAW/P,EAAE,GAAG,kBAChB0F,EACJsK,IAAgBtI,EAAOqI,GAAYC,IAAgBxH,QAErD,OACE,kBAAC,EAAD,CACElI,IAAKyP,EACLrQ,KAAMM,EACNyC,OAAQA,GACR6B,OAAQA,GACRkB,OAAQ4E,GACR3E,OAAQ4E,GACRxF,WAAY6G,EAAYuE,MACxBvK,MAAOA,WAMlB,CACDgC,EACA0G,GACA1C,EAAYuE,MACZxN,GACA2H,GACA9F,GACA+F,KAGI6F,GAA0B/B,uBAC9B,SAAC9M,EAAKuJ,EAAKzG,EAAGH,GACZ,IE1NgBkE,EAAOiI,EAAKnJ,EF0NtBhH,EAAIoO,GAAa/M,GAAKuJ,GACtBwF,EAAQzB,GAAWlM,GAAO4N,OAAOlM,IACjCmM,EAAQxB,GAAWxK,GAAO+L,OAAOrM,IACvCkJ,EAAe,CACbxN,KAAMM,EACNmE,GE/Nc+D,EF+NLkI,EE/NYD,EF+NLrJ,EE/NUE,EF+NErE,EAAeiE,EAAc,GE9N/DsB,GAASlB,EAAMA,EAAMkB,GAASiI,EAAMA,EAAMjI,GF+NpClE,EAAGsM,EACHC,SAAUpM,EACVqM,SAAUxM,EACV2E,GAAI2H,EAAQ5N,EAAgB,EAC5BgD,MACEsK,IAAgBtI,EAAO1H,EAAE,mBAAqBgQ,IAAgBxH,YAGpE,CACE9F,EACAC,EACA+E,EACAZ,EACAF,EACAwH,GACA3L,GACAkM,GACArK,GACAwK,KAIE2B,GAA0BtC,uBAAY,kBAAMjB,EAAe,MAAK,IAEtE,OACE,yBAAK7J,UAAU,SACb,kBAACqN,EAAA,EAAD,CAAKrN,UAAU,yCACb,kBAACsN,EAAA,EAAD,CAAKtN,UAAU,mBACb,kBAAC,EAAD,CACElC,UAAWzB,EAAOA,EAAKkB,OAAS+K,EAChC/J,OAAQkL,EACRpF,OAAQA,EACRC,YAAaqI,IACbpI,SAAU,SAACL,EAAGvH,GAAJ,OAAU+M,EAAa/M,IACjCqH,SAAU,SAACE,EAAGvH,GAAJ,OACR+M,GAAa,SAAAjH,GACX,IAAMqJ,EAAMrJ,EAAQ8K,QAAQ5Q,GACtB6Q,EAAe/K,EAAQgL,QAE7B,OADAD,EAAaE,OAAO5B,EAAK,GAClB0B,SAKf,kBAACF,EAAA,EAAD,CAAKtN,UAAU,iBACb,kBAAC2N,EAAA,EAAD,CACE1I,QAAQ,8BACR2I,KAAK,KACLC,QAAStF,GAET,sCAIN,kBAAC8E,EAAA,EAAD,CAAKrN,UAAU,2BACb,kBAACsN,EAAA,EAAD,CAAKtN,UAAU,gBAAgB8N,GAAI,GAAIC,GAAI,GACzC,2BAAO/N,UAAU,sBAAjB,eACA,kBAAC,EAAD,CACE6E,MAAOiF,GACPnD,SAAS,YACTpH,MAAM,SACNsE,MAAO,KACPD,OAAQ,IACR4C,YAAY,UACZH,cAAc,UACd9B,SAAU,kBAAMwF,IAAgB,SAAApN,GAAC,OAAKA,SAG1C,kBAAC2Q,EAAA,EAAD,CAAKtN,UAAU,gBAAgB8N,GAAI,GAAIC,GAAI,GACzC,2BAAO/N,UAAU,sBAAjB,WACA,kBAAC,EAAD,CACE6E,MAAOmF,GACPrD,SAAS,OACTpH,MAAM,aACNsE,MAAO,KACPD,OAAQ,IACR4C,YAAY,UACZH,cAAc,UACd9B,SAAU,kBAAM0F,IAAe,SAAAtN,GAAC,OAAKA,UAI3C,kBAAC0Q,EAAA,EAAD,CAAKrN,UAAU,kBAAkBiD,IAAKA,GACpC,kBAACqK,EAAA,EAAD,KACE,yBAAKzJ,MAAOA,EAAOD,OAAQA,EAAQpD,MAAO,CAAEwN,SAAU,aACpD,uBAAG3N,UAAS,oBAAeoD,EAAf,YAA6BH,EAA7B,MACT4E,GACC,0BACElI,UAAU,QACVc,EAAGxB,EAAe,EAAI4I,EAAM8D,GAC5BrL,EAAGuH,EAAMxH,GACTD,WAAW,UAEVyH,EAAM3I,OAGVwL,GACC,oCACE,kBAAC,EAAD,eACE3L,OAAQkM,GACRjM,cAAeA,EACfC,aAAcA,EACdJ,MAAO8K,IACH7B,IAEN,kBAAC,EAAD,eACElH,OAAQwK,GACRpM,cAAeA,EACfC,aAAcA,GACV8I,KAIR,8CAIN,yBACEvE,MAAOA,EAAQJ,EAAaF,EAC5BK,OAAQA,EAASN,EAAYE,EAC7BhD,MAAO,CAAEwN,SAAU,WAAYvK,WAAYA,EAAYH,UAAWA,IAElE,2BACGyH,IACC,uBACE1K,UAAS,oBAAe6J,GAAUpJ,EAAzB,aAA+BoJ,GAAUvJ,EAAzC,mBAAqDuJ,GAAUC,EAA/D,MAERsC,GACA7C,GACC,kBAAC,EAAD,CACE9I,EAAG8I,EAAYsD,SACfvM,EAAGiJ,EAAYuD,SACf5L,EAAG,GACHrB,KAAM0J,EAAYvH,MAClBb,WAAY6G,EAAY4F,YAG3BlC,GAAYrP,KAAI,SAACwR,EAAOnR,GAAR,OACf,kBAAC,0BAAD,eAAyBE,IAAKF,GAAOmR,UAM/C,kBAAC,EAAiBtE,GAClB,yBACE3G,IAAKuG,EACL3F,MAAOA,EACPD,OAAQA,EACRpD,MAAO,CAAEwN,SAAU,aAEnB,uBACE3N,UAAS,oBAAe6J,GAAUpJ,EAAI2C,EAA7B,aAA4CyG,GAAUvJ,EAC7D2C,EADO,mBACa4G,GAAUC,EADvB,MAGRY,IACC,kBAAC,EAAD,eACE1O,KAAM0O,GACN9D,aAAc4F,GACd3F,aAAckG,IACV,CACFrG,WACAC,WACA5H,UACA6B,UACA4C,QACAD,SACAH,aACAF,cACAC,eACAF,qBGnYd6K,G,cAAc,CAMlB/K,WAAY,CACVE,UAAW,GACXC,YAAa,GACbC,aAAc,GACdC,WAAY,IAEd0E,MAAO,CACL1I,SAAU,EACVC,WAAY,GACZC,UAAW,GACXC,cAAe,KAEjBwI,MAAO,CACL7I,MAAO,QACPC,YAAa,GACbC,SAAU,EACVC,WAAY,GACZwB,WAAY,IAEdmH,YAAa,CACXuE,MAAO,IACPqB,UAAW,KAEb3F,iBAAkB,CAAC,OAAQ,YAAa,OAAQ,WA4EnC8F,MAzEf,WACE,IAAM/R,EAAOF,IADA,EAEeC,mBAAS,CAAC,IAFzB,mBAENiS,EAFM,KAEEC,EAFF,KAIb,OACE,kBAACC,EAAA,EAAD,CAAWvO,UAAU,iBACnB,gCACE,wBAAIA,UAAU,aAAd,eAGF,0BAAMA,UAAU,YACd,kBAACqN,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,yDAEE,uBACEkB,KAAK,4EACLC,OAAO,UAFT,UAFF,QAaJ,kBAACpB,EAAA,EAAD,KACGgB,EAAO3R,KAAI,SAAAK,GAAC,OACX,kBAACuQ,EAAA,EAAD,CAAKrQ,IAAKF,EAAGgR,GAAI,GAAIW,GAAIL,EAAOlJ,OAAS,EAAI,EAAI,IAC/C,kBAAC,EAAD,eACE9I,KAAMA,EACNkM,QAAS,kBACP+F,GAAU,SAAA3R,GACR,IAAMmP,EAAMnP,EAAE4Q,QAAQxQ,GAChB4R,EAAMhS,EAAE8Q,QAEd,OADAkB,EAAIjB,OAAO5B,EAAK,GACT6C,OAGPR,SAKZ,kBAACd,EAAA,EAAD,CAAKrN,UAAU,QACb,kBAACsN,EAAA,EAAD,CAAKtN,UAAU,cACb,kBAAC2N,EAAA,EAAD,CACEE,QAAS,kBACPS,GAAU,SAAA3R,GACR,IAAMmP,EAAmB,IAAbnP,EAAEwI,OAAe,EAAIxI,EAAEA,EAAEwI,OAAS,GAAK,EACnD,OAAOxI,EAAEiS,OAAO9C,QAJtB,gBAcN,gCACE,kBAACuB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKtN,UAAU,mBACb,uBAAGwO,KAAK,yCAAyCC,OAAO,UAAxD,oBClGZI,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.b682287d.chunk.js","sourcesContent":["import { csv, nest } from 'd3';\nimport { useState, useEffect } from 'react';\n\nconst URLS = [\n  [\n    'Confirmed',\n    'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv',\n  ],\n  [\n    'Deaths',\n    'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv',\n  ],\n  [\n    'Recovered',\n    'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_recovered_global.csv',\n  ],\n];\nconst ID_COLS = ['Province/State', 'Country/Region', 'Lat', 'Long'];\n\nconst meltData = (data, name) => {\n  let newData = [];\n  data.forEach(row => {\n    Object.keys(row)\n      .filter(col => !ID_COLS.includes(col))\n      .forEach(col => {\n        if (row[col] === '') return;\n        let newRow = {};\n        ID_COLS.forEach(d => (newRow[d] = row[d]));\n        newRow['date'] = col;\n        newRow[name] = +row[col];\n        newData.push(newRow);\n      });\n  });\n  return newData;\n};\n\nconst customAnnotations = {\n  Peru: {\n    '3/16/20': 'Quarantine starts',\n  },\n};\n\nexport const useData = () => {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    Promise.all(URLS.map(d => csv(d[1]))).then(sourceData => {\n      const data = sourceData.map((d, i) =>\n        nest()\n          .key(d => d['Country/Region'])\n          .key(d => d['date'])\n          .map(meltData(d, URLS[i][0]))\n      );\n      const locations = data[0].keys();\n      let combinedData = [];\n      locations.forEach(loc => {\n        const allData = data.map(d => d[`$${loc}`]).filter(d => d);\n        const dates = allData[0].keys();\n        let idxConfirmed = -1;\n        let idxDeaths = -1;\n        const locAnn = customAnnotations[loc];\n        dates.forEach(dd => {\n          const values = allData.map(d => d[`$${dd}`]);\n          let newData = {};\n          ID_COLS.forEach(d => {\n            const val = values[0][0][d];\n            newData[d] = ['Lat', 'Long'].includes(d) ? +val : val;\n            if (locAnn) {\n              const dateAnn = locAnn[dd];\n              if (dateAnn) newData['annotation'] = dateAnn;\n            }\n          });\n          values.forEach((groupValues, i) => {\n            if (!groupValues) return;\n            const name = URLS[i][0];\n            newData[name] = groupValues\n              .map(val => val[name])\n              .reduce((acc, val) => val + acc);\n          });\n          if (newData['Confirmed'] > 0) {\n            idxConfirmed++;\n            newData['date'] = new Date(dd);\n            newData['idxConfirmed'] = idxConfirmed;\n            if (newData['Deaths'] > 0) {\n              idxDeaths++;\n              newData['idxDeaths'] = idxDeaths;\n            }\n            combinedData.push(newData);\n          }\n        });\n      });\n      const formatedData = nest()\n        .key(d => d['Country/Region'])\n        .sortValues((a, b) => a.date - b.date)\n        .map(combinedData);\n      setData(formatedData);\n    });\n  }, []);\n\n  return data;\n};\n","import React, { useMemo } from 'react';\nimport moment from 'moment';\nimport './Axis.css';\n\nexport const AxisBottom = ({\n  xScale,\n  boundedHeight,\n  boundedWidth,\n  date,\n  label,\n  labelOffset,\n  tickSize,\n  tickOffset,\n  tickWidth,\n  tickWidthDate\n}) => {\n  const range = useMemo(() => xScale ? xScale.range(): {}, [xScale]);\n  const tickCount = useMemo(() => boundedWidth / (date ? tickWidthDate : tickWidth), [\n    boundedWidth,\n    tickWidth,\n    tickWidthDate,\n    date\n  ]);\n\n  return (\n    <>\n      <path\n        className=\"line\"\n        d={['M', range[0], boundedHeight, 'H', range[1]].join(' ')}\n        // in case of not nice() scale\n        // d={['M', range[0], boundedHeight+6, 'v', -6, 'H', range[1], 'v', 6].join(' ')}\n        fill=\"none\"\n      />\n      {xScale && xScale.ticks(tickCount).map((tickValue, i) => (\n        <g\n          className=\"tick\"\n          key={i}\n          transform={`translate(${xScale(tickValue)},0)`}\n        >\n          <line y1={boundedHeight} y2={boundedHeight + tickSize} />\n          {/* <line y1={boundedHeight - tickSize} y2={boundedHeight} /> */}\n          <text\n            style={{ textAnchor: 'middle' }}\n            dy=\".71em\"\n            y={boundedHeight + tickOffset}\n          >\n            {date ? moment(tickValue).format('Do MMM') : tickValue}\n          </text>\n        </g>\n      ))}\n      {label && (\n        <text\n          className=\"label\"\n          x={boundedWidth / 2}\n          y={boundedHeight + labelOffset}\n          textAnchor=\"middle\"\n        >\n          {label}\n        </text>\n      )}\n    </>\n  );\n};\n","import React, { useMemo } from 'react';\nimport { format } from 'd3';\nimport './Axis.css';\n\nconst formatNumbers = format('.0s');\n\nexport const AxisLeft = ({\n  yScale,\n  boundedHeight,\n  boundedWidth,\n  label,\n  labelOffset,\n  tickSize,\n  tickOffset,\n  tickHeight,\n}) => {\n  const range = useMemo(() => yScale.range(), [yScale]);\n  const tickCount = useMemo(() => boundedHeight / tickHeight, [\n    boundedHeight,\n    tickHeight,\n  ]);\n  const logFormat = yScale.tickFormat(tickCount, '');\n\n  return (\n    <>\n      <path\n        className=\"line\"\n        d={['M', 0, range[1], 'v', range[0]].join(' ')}\n        fill=\"none\"\n      />\n      {yScale\n        .ticks(tickCount)\n        .filter(d => d >= 1)\n        .map(logFormat)\n        .filter(d => d !== '')\n        .map((tickValue, i) => (\n          <g\n            key={i}\n            className=\"tick\"\n            transform={`translate(0,${yScale(tickValue)})`}\n          >\n            <line x2={-tickSize} />\n            <line className=\"axis-line\" x2={boundedWidth} />\n            <text\n              key={tickValue}\n              style={{ textAnchor: 'end' }}\n              x={-tickOffset}\n              dy=\".32em\"\n            >\n              {formatNumbers(tickValue)}\n            </text>\n          </g>\n        ))}\n      {label && (\n        <text\n          className=\"label\"\n          textAnchor=\"middle\"\n          transform={`translate(${-labelOffset},${boundedHeight /\n            2}) rotate(-90)`}\n        >\n          {label}\n        </text>\n      )}\n    </>\n  );\n};\n","import React, { useEffect, useRef } from 'react';\nimport { select, line, easeCubicOut } from 'd3';\nimport { interpolatePath } from 'd3-interpolate-path';\nimport { useSpring, animated } from 'react-spring';\nimport './Marks.css';\n\nexport const Dot = ({ x, y, r, fill, transition }) => {\n  const [style, setStyle] = useSpring(() => ({\n    config: { duration: transition, easing: easeCubicOut },\n    cx: x,\n    cy: y,\n    r: 0,\n    fill: fill ? fill : '#efefef',\n  }));\n\n  useEffect(() => {\n    setStyle({\n      cx: x,\n      cy: y,\n      r: r,\n      fill: fill ? fill : '#efefef',\n    });\n  }, [setStyle, x, y, fill, r]);\n\n  return (\n    <animated.circle\n      {...style}\n    />\n  );\n};\n\nexport const Marks = ({\n  data,\n  xScale,\n  yScale,\n  xValue,\n  yValue,\n  transition,\n  color,\n}) => {\n  const path = useRef(null);\n\n  useEffect(() => {\n    select(path.current)\n      .transition()\n      .duration(transition)\n      .ease(easeCubicOut)\n      .attrTween('d', function() {\n        const prev = select(this).attr('d');\n        const current = line()\n          .x(d => xScale(xValue(d)))\n          .y(d => yScale(yValue(d)))(data);\n        return interpolatePath(prev, current);\n      });\n  }, [data, xScale, yScale, xValue, yValue, transition]);\n\n  return (\n    <g className=\"marks\">\n      <path ref={path} stroke={color} />\n      {/* {data.map((d, i) => {\n        const x = xScale(xValue(d));\n        const y = yScale(yValue(d));\n        return (\n          <Dot\n            key={i}\n            x={x}\n            y={y}\n            r={5}\n            fill={color}\n            transition={transition}\n          />\n        );\n      })} */}\n    </g>\n  );\n};\n","// from: https://wattenberger.com/blog/react-and-d3\n// npm i @juggle/resize-observer\nimport { ResizeObserver } from '@juggle/resize-observer';\nimport { useRef, useEffect, useState } from 'react';\n\n// possible chart settings:\n// const dimensions = {\n//   \"width\": 363,\n//   \"height\": 181,\n//   \"marginTop\": 56,\n//   \"marginRight\": 47,\n//   \"marginBottom\": 81,\n//   \"marginLeft\": 68\n// }\n\nconst combineChartDimensions = dimensions => {\n  const parsedDimensions = {\n      ...dimensions,\n      marginTop: dimensions.marginTop || 10,\n      marginRight: dimensions.marginRight || 10,\n      marginBottom: dimensions.marginBottom || 40,\n      marginLeft: dimensions.marginLeft || 75,\n  }\n\n  return {\n      ...parsedDimensions,\n      boundedHeight: Math.max(\n        parsedDimensions.height\n        - parsedDimensions.marginTop\n        - parsedDimensions.marginBottom,\n        0,\n      ),\n      boundedWidth: Math.max(\n        parsedDimensions.width\n        - parsedDimensions.marginLeft\n        - parsedDimensions.marginRight,\n        0,\n      ),\n  }\n}\n\nexport const useChartDimensions = passedSettings => {\n  const ref = useRef();\n  const dimensions = combineChartDimensions(passedSettings);\n  const [width, setWidth] = useState(0);\n  const [height, setHeight] = useState(0);\n\n  useEffect(() => {\n    if (dimensions.width && dimensions.height) return [ref, dimensions];\n    const element = ref.current;\n    const resizeObserver = new ResizeObserver(entries => {\n      if (!Array.isArray(entries)) return;\n      if (!entries.length) return;\n      const entry = entries[0];\n      if (width !== entry.contentRect.width) setWidth(entry.contentRect.width);\n      if (height !== entry.contentRect.height)\n        setHeight(entry.contentRect.height);\n    });\n    resizeObserver.observe(element);\n    return () => resizeObserver.unobserve(element);\n  }, []);\n\n  const newSettings = combineChartDimensions({\n    ...dimensions,\n    width: dimensions.width || width,\n    height: dimensions.height || height,\n  });\n\n  return [ref, newSettings];\n};\n","import React from 'react';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport Chip from '@material-ui/core/Chip';\nimport './SelectLocation.css';\nimport { ascending } from 'd3';\n\nconst LocationTag = ({ tag, color, onDelete }) => (\n  <Chip\n    className=\"location-tag\"\n    label={tag}\n    onDelete={e => onDelete(e, tag)}\n    style={{ backgroundColor: color, color: 'white' }}\n  />\n);\n\nexport const SelectLocation = ({\n  locations,\n  values,\n  colors,\n  colorScheme,\n  onChange,\n  onDelete,\n}) => {\n  return (\n    <Autocomplete\n      className=\"autocomplete\"\n      multiple\n      options={locations.sort(ascending)}\n      // getOptionLabel={option => option.title}\n      value={values}\n      onChange={onChange}\n      renderInput={params => (\n        <TextField {...params} variant=\"standard\" label=\"Select locations\" />\n      )}\n      renderTags={tag =>\n        tag.map((d, i) => (\n          <LocationTag\n            key={d}\n            tag={d}\n            color={colorScheme[colors[d] % colorScheme.length]}\n            onDelete={onDelete}\n          />\n        ))\n      }\n    />\n  );\n};\n","import React, { useMemo } from 'react';\nimport moment from 'moment';\nimport { format } from 'd3';\nimport './ChartToolTip.css';\n\nconst numberFormat = format(',');\n\n// Pcrovine/State: \"\"\n// Country/Region: \"Peru\"\n// Lat: -9.19\n// Long: -75.0152\n// date: Fri Mar 20 2020 00:00:00 GMT+1030 (Australian Central Daylight Time) {}\n// Confirmed: 234\n// Deaths: 3\n\nexport const ChartToolTip = ({ data, x, y, color, up }) => {\n  const text = useMemo(() => {\n    if (!data) return;\n    return {\n      date: moment(data['date']).format('Do MMM'),\n      country: data['Country/Region'],\n      confirmed: numberFormat(data['Confirmed']),\n      deaths: numberFormat(data['Deaths']),\n      recovered: numberFormat(data['Recovered'])\n    };\n  }, [data]);\n\n  return (\n    <div\n      className=\"wrapper\"\n      style={{\n        transform: `translate(${x}px,${up ? `calc(${y-10}px - 100%)` : `${y+30}px`})`,\n        backgroundColor: color,\n        opacity: text ? 0.85 : 0,\n      }}\n    >\n      <div className=\"chart-tooltip\">\n        { data && (\n          <>\n            <b>{text.country} - {text.date}</b><br/>\n            <span>Confirmed: {text.confirmed}</span><br/>\n            <span>Deaths: {text.deaths}</span><br/>\n            <span>Recovered: {text.recovered}</span>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst TextLabel = styled.label`\n  color: black;\n  font-size: 0.9rem;\n  font-weight: ${d => d.active ? 400 : 300};\n  // font-weight: ${d => d.active ? 500 : 400};\n  opacity: ${d => d.active ? 1 : 0.5};\n  margin-left: ${d => (d.right ? 0.25 : 0)}rem;\n  margin-right: ${d => (d.left ? 0.25 : 0)}rem;\n  transition: 0.2s;\n`;\n\nconst SwitchLabel = styled.label`\n  position: relative;\n  display: inline-block;\n  width: ${d => d.width}rem;\n  height: ${d => d.height}rem;\n\n  input {\n    opacity: 0;\n    width: 0;\n    height: 0;\n  }\n`;\n\nconst Slider = styled.span`\n  position: absolute;\n  cursor: pointer;\n  border-radius: 1rem;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: ${d => d.inactiveColor};\n  -webkit-transition: 0.2s;\n  transition: 0.2s;\n\n  &:before {\n    position: absolute;\n    content: '';\n    border-radius: 50%;\n    height: ${d => d.ballSize}rem;\n    width: ${d => d.ballSize}rem;\n    left: ${d => d.ballMargin}rem;\n    bottom: ${d => d.ballMargin}rem;\n    background-color: white;\n    -webkit-transition: 0.2s;\n    transition: 0.2s;\n  }\n\n  input:checked + & {\n    background-color: ${d => d.activeColor};\n  }\n\n  input:focus + & {\n    box-shadow: 0 0 1px ${d => d.activeColor};\n  }\n\n  input:checked + &:before {\n    -webkit-transform: translateX(${d => d.move}rem);\n    -ms-transform: translateX(${d => d.move}rem);\n    transform: translateX(${d => d.move}rem);\n  }\n`;\n\nexport const ToogleSwitch = ({\n  value,\n  preLabel,\n  label,\n  width = 3.5,\n  height = 1.5,\n  ballMargin = 0.2,\n  activeColor = '#007bff',\n  inactiveColor = '#ccc',\n  onChange = () => {},\n}) => {\n  const ballSize = height - ballMargin * 2;\n\n  return (\n    <div>\n      {preLabel && <TextLabel left active={!value}>{preLabel}</TextLabel>}\n      <SwitchLabel width={width} height={height}>\n        <input type=\"checkbox\" checked={value} onChange={onChange} />\n        <Slider\n          ballSize={ballSize}\n          move={width - ballSize - ballMargin * 2}\n          ballMargin={ballMargin}\n          activeColor={activeColor}\n          inactiveColor={inactiveColor}\n        />\n      </SwitchLabel>\n      {label && <TextLabel right active={value}>{label}</TextLabel>}\n    </div>\n  );\n};\n","import React, { useMemo } from 'react';\nimport { Delaunay } from 'd3-delaunay';\n\nexport const Voronoi = ({\n  data,\n  xScale,\n  xValues,\n  yScale,\n  yValues,\n  width,\n  height,\n  marginLeft,\n  marginRight,\n  marginBottom,\n  marginTop,\n  onMouseEnter = () => {},\n  onMouseLeave = () => {},\n}) => {\n  const formatedData = useMemo(() => {\n    if (!data) return;\n\n    return data.map(d =>\n      d.map(o => {\n        const x = xScale(xValues(o));\n        const y = yScale(yValues(o));\n        return { x, y };\n      })\n    );\n  }, [data, xScale, xValues, yScale, yValues]);\n\n  const box = useMemo(\n    () => [\n      0,\n      0,\n      width - marginRight - marginLeft + 100,\n      height - marginBottom - marginTop + 100,\n    ],\n    [height, marginBottom, marginLeft, marginRight, marginTop, width]\n  );\n\n  const voronoiData = useMemo(() => {\n    if (box[2] - box[0] <= 0 || box[3] - box[1] <= 0) return;\n    const points = formatedData\n      .map((d, loc) => d.map((o, day) => Object.assign({ loc, day }, o)))\n      .flat();\n    return {\n      points,\n      voronoi: Delaunay.from(\n        points.map(d => [d.x + box[0], d.y + box[1]])\n      ).voronoi(box),\n    };\n  }, [formatedData, box]);\n\n  const paths = useMemo(() => {\n    if (!voronoiData) return;\n    const { points, voronoi } = voronoiData;\n    return points.map(({ x, y, loc, day }, i) => (\n      <path\n        key={i}\n        d={voronoi.renderCell(i)}\n        // stroke=\"black\"\n        // strokeWidth={2}\n        // fill=\"red\"\n        // opacity={0.1}\n        opacity={0}\n        onMouseEnter={() => onMouseEnter(loc, day, x, y)}\n        onTouchStart={() => onMouseEnter(loc, day, x, y)}\n        onTouchEnd={() => onMouseLeave(loc, day, x, y)}\n        onMouseLeave={() => onMouseLeave(loc, day, x, y)}\n      />\n    ));\n  }, [voronoiData, onMouseEnter, onMouseLeave]);\n\n  return <g> {paths} </g>;\n};\n","import React, {\n  useMemo,\n  useState,\n  useEffect,\n  useCallback,\n  useRef,\n} from 'react';\nimport {\n  scaleTime,\n  extent,\n  max,\n  scaleLinear,\n  scaleLog,\n  schemeTableau10,\n} from 'd3';\nimport { Button, Col, Row } from 'react-bootstrap';\nimport { AnnotationCalloutCircle } from 'react-annotation';\nimport { AxisBottom } from './AxisBottom';\nimport { AxisLeft } from './AxisLeft';\nimport { Marks, Dot } from './Marks';\nimport { useChartDimensions } from './useChartDimensions';\nimport { SelectLocation } from './SelectLocation';\nimport { ChartToolTip } from './ChartToolTip';\nimport { ToogleSwitch } from './ToogleSwitch';\nimport './LineChart.css';\nimport { clamp } from './utils';\nimport { Voronoi } from './Voronoi';\nimport { useD3Zoom } from './useD3Zoom';\n\nexport const LineChart = ({\n  title,\n  data,\n  dimensions,\n  xAxis,\n  yAxis,\n  transitions,\n  defaultLocations,\n  onClose,\n}) => {\n  const [ref, dms] = useChartDimensions(dimensions);\n  const {\n    width,\n    height,\n    marginLeft,\n    marginTop,\n    marginBottom,\n    marginRight,\n    boundedHeight,\n    boundedWidth,\n  } = dms;\n\n  const svgInteractionRef = useRef();\n  const [selection, setSelection] = useState(defaultLocations);\n  const [colors, setColors] = useState({});\n  const [toolTipData, setToolTipData] = useState();\n  const [switchXValue, setSwitchXValue] = useState(false);\n  const [switchXAxis, setSwitchXAxis] = useState(false);\n  const zoomProps = useD3Zoom({ ref: svgInteractionRef });\n\n  const xValues = useCallback(\n    d =>\n      switchXAxis\n        ? switchXValue\n          ? d['idxDeaths']\n          : d['idxConfirmed']\n        : d['date'],\n    [switchXAxis, switchXValue]\n  );\n\n  const yValues = useCallback(\n    d => (switchXValue ? d['Deaths'] : d['Confirmed']),\n    [switchXValue]\n  );\n\n  const selectedData = useMemo(() => {\n    if (data)\n      return selection\n        .map(d => data[`$${d}`])\n        .map(d => d.filter(o => yValues(o) >= 1));\n  }, [data, selection, yValues]);\n\n  const xScale = useMemo(() => {\n    if (!selectedData) return;\n    const domain = extent(selectedData.map(d => d.map(xValues)).flat());\n    const scaleType = switchXAxis ? scaleLinear : scaleTime;\n    return scaleType()\n      .domain(domain)\n      .range([0, boundedWidth]);\n  }, [selectedData, xValues, boundedWidth, switchXAxis]);\n\n  const yScale = useMemo(() => {\n    if (!selectedData) return;\n    const domain = [1, max(selectedData.map(d => d.map(yValues)).flat())];\n    return scaleLog()\n      .domain(domain)\n      .range([boundedHeight, 0])\n      .nice();\n  }, [selectedData, yValues, boundedHeight]);\n\n  const xScaleShow = useMemo(() => {\n    if (!xScale) return;\n    return zoomProps.rescaleX ? zoomProps.rescaleX(xScale) : xScale.copy();\n  }, [xScale, zoomProps]);\n\n  const yScaleShow = useMemo(() => {\n    if (!yScale) return;\n    return zoomProps.rescaleY ? zoomProps.rescaleY(yScale) : yScale.copy();\n  }, [yScale, zoomProps]);\n\n  useEffect(() => {\n    if (!data) return;\n    setColors(current => {\n      const currentKeys = Object.keys(current);\n      if (currentKeys.length === 0) {\n        let newColors = {};\n        selection.forEach((d, i) => (newColors[d] = i));\n        return newColors;\n      }\n      const currentColors = Object.values(current);\n      let newColors = Object.assign({}, current);\n      // Adding locations\n      selection\n        .filter(d => !currentKeys.includes(d))\n        .forEach(d => {\n          let idx = 0;\n          while (currentColors.includes(idx)) {\n            idx++;\n          }\n          newColors[d] = idx;\n        });\n      // Removing a location\n      currentKeys\n        .filter(d => !selection.includes(d))\n        .forEach(d => {\n          delete newColors[d];\n        });\n      return newColors;\n    });\n  }, [data, selection]);\n\n  const annotations = useMemo(() => {\n    if (!selectedData) return;\n    let annotations = [];\n    selectedData.forEach(d => {\n      d.filter(o => o['annotation']).forEach(o => {\n        const x = xScale(xValues(o));\n        const y = yScale(yValues(o));\n        const dx = 30;\n        const dy = 20;\n        const wrap = 80;\n        annotations.push({\n          className: 'custom-annotation',\n          x,\n          y,\n          dx: x + dx + marginLeft + wrap >= width - marginRight ? -dx : dx,\n          dy,\n          note: {\n            title: o['Country/Region'],\n            label: o['annotation'],\n            lineType: null,\n            align: 'middle',\n            wrap,\n            orientation: 'leftRight',\n          },\n          subject: { radius: 10, radiusPadding: 0 },\n        });\n      });\n    });\n\n    return annotations;\n  }, [\n    marginLeft,\n    marginRight,\n    selectedData,\n    width,\n    xScale,\n    xValues,\n    yScale,\n    yValues,\n  ]);\n\n  const marks = useMemo(() => {\n    if (selectedData)\n      return (\n        <>\n          {selectedData.map((d, i) => {\n            if (d.length === 0) return;\n            const location = d[0]['Country/Region'];\n            const color =\n              schemeTableau10[colors[location] % schemeTableau10.length];\n\n            return (\n              <Marks\n                key={location}\n                data={d}\n                xScale={xScale}\n                yScale={yScale}\n                xValue={xValues}\n                yValue={yValues}\n                transition={transitions.lines}\n                color={color}\n              />\n            );\n          })}\n        </>\n      );\n  }, [\n    colors,\n    selectedData,\n    transitions.lines,\n    xScale,\n    xValues,\n    yScale,\n    yValues,\n  ]);\n\n  const handleVoronoiMouseEnter = useCallback(\n    (loc, day, x, y) => {\n      const d = selectedData[loc][day];\n      const xShow = xScaleShow(xScale.invert(x));\n      const yShow = yScaleShow(yScale.invert(y));\n      setToolTipData({\n        data: d,\n        x: clamp(xShow, marginLeft, boundedWidth - marginRight - 25),\n        y: yShow,\n        tooltipX: x,\n        tooltipY: y,\n        up: yShow > boundedHeight / 2,\n        color:\n          schemeTableau10[colors[d['Country/Region']] % schemeTableau10.length],\n      });\n    },\n    [\n      boundedHeight,\n      boundedWidth,\n      colors,\n      marginLeft,\n      marginRight,\n      selectedData,\n      xScale,\n      xScaleShow,\n      yScale,\n      yScaleShow,\n    ]\n  );\n\n  const handleVoronoiMouseLeave = useCallback(() => setToolTipData(''), []);\n\n  return (\n    <div className=\"chart\">\n      <Row className=\"chart-selector justify-content-center\">\n        <Col className=\"select-location\">\n          <SelectLocation\n            locations={data ? data.keys() : defaultLocations}\n            values={selection}\n            colors={colors}\n            colorScheme={schemeTableau10}\n            onChange={(e, d) => setSelection(d)}\n            onDelete={(e, d) =>\n              setSelection(current => {\n                const idx = current.indexOf(d);\n                const newSelection = current.slice();\n                newSelection.splice(idx, 1);\n                return newSelection;\n              })\n            }\n          />\n        </Col>\n        <Col className=\"close-wrapper\">\n          <Button\n            variant=\"outline-danger close-button\"\n            size=\"sm\"\n            onClick={onClose}\n          >\n            <span>x</span>\n          </Button>\n        </Col>\n      </Row>\n      <Row className=\"justify-content-between\">\n        <Col className=\"chart-options\" sm={12} md={6}>\n          <label className=\"chart-option-label\">Show value:</label>\n          <ToogleSwitch\n            value={switchXValue}\n            preLabel=\"Confirmed\"\n            label=\"Deaths\"\n            width={2.75}\n            height={1.3}\n            activeColor=\"#7a9abe\"\n            inactiveColor=\"#7a9abe\"\n            onChange={() => setSwitchXValue(d => !d)}\n          />\n        </Col>\n        <Col className=\"chart-options\" sm={12} md={6}>\n          <label className=\"chart-option-label\">x Axis:</label>\n          <ToogleSwitch\n            value={switchXAxis}\n            preLabel=\"Date\"\n            label=\"Days since\"\n            width={2.75}\n            height={1.3}\n            activeColor=\"#7a9abe\"\n            inactiveColor=\"#7a9abe\"\n            onChange={() => setSwitchXAxis(d => !d)}\n          />\n        </Col>\n      </Row>\n      <Row className=\"chart-container\" ref={ref}>\n        <Col>\n          <svg width={width} height={height} style={{ position: 'absolute' }}>\n            <g transform={`translate(${marginLeft},${marginTop})`}>\n              {title && (\n                <text\n                  className=\"title\"\n                  x={boundedWidth / 2 + title.dx}\n                  y={title.dy}\n                  textAnchor=\"middle\"\n                >\n                  {title.label}\n                </text>\n              )}\n              {selectedData ? (\n                <>\n                  <AxisBottom\n                    xScale={xScaleShow}\n                    boundedHeight={boundedHeight}\n                    boundedWidth={boundedWidth}\n                    date={!switchXAxis}\n                    {...xAxis}\n                  />\n                  <AxisLeft\n                    yScale={yScaleShow}\n                    boundedHeight={boundedHeight}\n                    boundedWidth={boundedWidth}\n                    {...yAxis}\n                  />\n                </>\n              ) : (\n                <text>Loading...</text>\n              )}\n            </g>\n          </svg>\n          <svg\n            width={width - marginLeft - marginRight}\n            height={height - marginTop - marginBottom}\n            style={{ position: 'absolute', marginLeft: marginLeft, marginTop: marginTop }}\n          >\n            <g>\n              {selectedData && (\n                <g\n                  transform={`translate(${zoomProps.x}, ${zoomProps.y}) scale(${zoomProps.k})`}\n                >\n                  {marks}\n                  {toolTipData && (\n                    <Dot\n                      x={toolTipData.tooltipX}\n                      y={toolTipData.tooltipY}\n                      r={10}\n                      fill={toolTipData.color}\n                      transition={transitions.highlight}\n                    />\n                  )}\n                  {annotations.map((props, i) => (\n                    <AnnotationCalloutCircle key={i} {...props} />\n                  ))}\n                </g>\n              )}\n            </g>\n          </svg>\n          <ChartToolTip {...toolTipData} />\n          <svg\n            ref={svgInteractionRef}\n            width={width}\n            height={height}\n            style={{ position: 'absolute' }}\n          >\n            <g\n              transform={`translate(${zoomProps.x + marginLeft}, ${zoomProps.y +\n                marginTop}) scale(${zoomProps.k})`}\n            >\n              {selectedData && (\n                <Voronoi\n                  data={selectedData}\n                  onMouseEnter={handleVoronoiMouseEnter}\n                  onMouseLeave={handleVoronoiMouseLeave}\n                  {...{\n                    xValues,\n                    yValues,\n                    xScale,\n                    yScale,\n                    width,\n                    height,\n                    marginLeft,\n                    marginRight,\n                    marginBottom,\n                    marginTop,\n                  }}\n                />\n              )}\n            </g>\n          </svg>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n","import { zoom, select, event, zoomIdentity } from 'd3';\nimport { useEffect, useState } from 'react';\n\nexport const useD3Zoom = ({ ref }) => {\n  const [zoomProps, setZoomProps] = useState({ k: 1, x: 0, y: 0 });\n\n  useEffect(() => {\n    const zoomHandler = () => {\n      setZoomProps(event.transform);\n    };\n\n    const d3Zoom = zoom()\n      // .translateExtent([ [-100, -100], [1000, 500] ])\n      .scaleExtent([1, 3])\n      .on('zoom', zoomHandler);\n\n    const svg = select(ref.current);\n\n    svg.call(d3Zoom);\n    svg.on('dblclick.zoom', () => {\n      d3Zoom.transform(svg, zoomIdentity);\n    });\n  }, [ref]);\n\n  return zoomProps;\n};\n","export const clamp = (value, min, max) =>\n  value >= max ? max : value <= min ? min : value;\n","import React, { useState } from 'react';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport { useData } from './useData';\nimport { LineChart } from './LineChart';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\n\nconst chartConfig = {\n  // title: {\n  //   label: 'Testing',\n  //   dx: 0,\n  //   dy: -20,\n  // },\n  dimensions: {\n    marginTop: 10,\n    marginRight: 35,\n    marginBottom: 30,\n    marginLeft: 75,\n  },\n  xAxis: {\n    tickSize: 6,\n    tickOffset: 15,\n    tickWidth: 80,\n    tickWidthDate: 140,\n  },\n  yAxis: {\n    label: 'Cases',\n    labelOffset: 50,\n    tickSize: 6,\n    tickOffset: 10,\n    tickHeight: 80,\n  },\n  transitions: {\n    lines: 500,\n    highlight: 100,\n  },\n  defaultLocations: ['Peru', 'Australia', 'Iran', 'Italy'],\n};\n\nfunction App() {\n  const data = useData();\n  const [charts, setCharts] = useState([0]);\n\n  return (\n    <Container className=\"app-container\">\n      <header>\n        <h1 className=\"mt-4 mb-4\">Covid 2019</h1>\n      </header>\n\n      <main className=\"app-main\">\n        <Row>\n          <Col>\n            <p>\n              Plots of coronavirus data (\n              <a\n                href=\"https://github.com/CSSEGISandData/COVID-19/tree/master/csse_covid_19_data\"\n                target=\"_black\"\n              >\n                source\n              </a>\n              ).\n            </p>\n          </Col>\n        </Row>\n\n        <Row>\n          {charts.map(i => (\n            <Col key={i} md={12} xl={charts.length > 1 ? 6 : 12}>\n              <LineChart\n                data={data}\n                onClose={() =>\n                  setCharts(d => {\n                    const idx = d.indexOf(i);\n                    const out = d.slice();\n                    out.splice(idx, 1);\n                    return out;\n                  })\n                }\n                {...chartConfig}\n              />\n            </Col>\n          ))}\n        </Row>\n        <Row className=\"mt-2\">\n          <Col className=\"text-right\">\n            <Button\n              onClick={() =>\n                setCharts(d => {\n                  const idx = d.length === 0 ? 0 : d[d.length - 1] + 1;\n                  return d.concat(idx);\n                })\n              }\n            >\n              Add Chart\n            </Button>\n          </Col>\n        </Row>\n      </main>\n\n      <footer>\n        <Row>\n          <Col className=\"mt-4 text-right\">\n            <a href=\"https://github.com/renato145/covid2019\" target=\"_black\">\n              Source code\n            </a>\n          </Col>\n        </Row>\n      </footer>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}